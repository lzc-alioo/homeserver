{"version":3,"sources":["serviceWorker.js","jsdemo.js","jsdemob.js","jsdemoc.js","TabBarExample.js","index.js"],"names":["Boolean","window","location","hostname","match","Item","List","JsDemo","props","state","list","mychecked","axios","get","server_path","then","res","setState","data","terminals","console","log","JSON","stringify","catch","err","obj","event","mac","act","flag","substring","this","getDataA","size","map","full","Header","title","name","ip","thumb","extra","checked","onChange","accessCtrl","bind","Body","Footer","content","speed","upSpeed","React","Component","JsDemoWapper","createForm","ReactDOM","render","document","getElementById","nowTimeStamp","Date","now","utcOffset","getTime","getTimezoneOffset","Test","formatDate","date","pad","n","timeStr","getHours","getMinutes","onChange1","i","type","time","timeString","startTime","startTimeStr","endTime","endTimeStr","updateDataA","postData","url","method","dpValue","idt","toISOString","slice","onSubmit","form","validateFields","force","error","getFieldsValue","onReset","resetFields","setTimeout","validateIdp","rule","callback","isNaN","parse","Error","cDate","newDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setFieldsValue","dp","validateDatePicker","getFieldError","getFieldProps","className","renderFooter","join","mode","minuteStep","value","arrow","inline","onClick","TestWrapper","ButtonExample","disabled","loading","icon","src","alt","style","marginRight","TabBarExample","selectedTab","hidden","fullScreen","pageText","position","height","width","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","key","background","selectedIcon","selected","badge","onPress","data-seed","renderContent","dot","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f70ba0f0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card, WhiteSpace } from 'antd-mobile';\nimport { List,  Switch } from 'antd-mobile';\nimport {createForm} from \"rc-form\";\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\n\nconst server_path='http://192.168.16.198:8081';\n\nclass JsDemo extends React.Component {\n\nconstructor(props){\n        super(props);\n        this.state={\n        list:[],\n        mychecked:true\n        }\n}\n\ngetDataA() {\n    axios.get(server_path+'/statistic/getList')\n    .then((res)=>{\n\n            // 注意this指向\n            this.setState({\n                    list:res.data.terminals\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data) );\n            //debugger\n\n    })\n    .catch((err)=>{\n            console.log(err)\n    })\n}\n\n\naccessCtrl(obj,event) {\n\n    var mac=obj.mac;\n    var mychecked = ( 'F' === obj.flag.substring(2,3) )  ? true : false;\n    var act = mychecked ? \"on\" : \"off\";\n\n\n    //debugger\n    axios.get(server_path+'/statistic/accessCtrl?mac='+ mac+'&act='+act)\n    .then((res)=>{\n\n        // 注意this指向\n        this.setState({\n            list:res.data.terminals\n        });\n        console.log(\"res.data=\" + JSON.stringify(res.data) );\n        //debugger\n\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n\n}\n\n\ncomponentDidMount() {\n        console.log(\"jsdemo componentDidMount 进来了。。。\")\n        this.getDataA();\n}\n\n\nrender() {\n// const { getFieldProps } = this.props.form;\n\nreturn (\n    <div>\n            <WhiteSpace size=\"lg\"/>\n            <List\n            >\n\n\n                    {\n                            this.state.list.map(obj=>{\n                                    //console.log(\"obj=\"+JSON.stringify(obj))\n\n                                    //TTFFFFTFFTFF ali15可上网   ；TTTFFFTFFTFF 不可上网\n                                    //FTFFFFTFFTFF ali11可上网   ；FFTFFFTFFTFF 不可上网\n                                    //FTFFFFFFFTFF x55  可上网   ；FTTFFFFFFTFF 不可上网\n                                    //FFFFFFTFFTFF 离线设备可上网 ；FFTFFFTFFTFF 不可上网\n                                    //var mychecked = ('FTFFFFTFFTFF' == obj.flag || 'FTFFFFFFFTFF' == obj.flag || 'FFFFFFTFFTFF' == obj.flag || 'TTFFFFTFFTFF' == obj.flag) ? true : false;\n\n                                    //第3位是F 可以上网，第3位是T不可上网\n                                    var mychecked = ( 'F' === obj.flag.substring(2,3) )  ? true : false;\n\n                                    //console.log(obj.name+\",\"+ obj.flag+\",mychecked=\"+mychecked);\n\n                                    //debugger\n                                    return (\n                                        <Item>\n\n                                        <Card full>\n                                                <Card.Header\n                                                    title={obj.name + \" ( \"+obj.ip+\")\"}\n                                                    thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                                                    extra={<Switch\n                                                        checked={ mychecked }\n                                                        // onChange={() => {\n                                                            // this.setState({\n                                                            // checked: !this.state.mychecked\n                                                            //});\n                                                            //alert(\"666\");\n                                                        // }}\n                                                        onChange={this.accessCtrl.bind(this,obj)}\n                                                        />\n\n                                                    }\n                                                />\n                                                <Card.Body>\n                                                        <div>{ obj.mac } </div>\n                                                </Card.Body>\n                                                <Card.Footer content={ \"实时下载速度：\"+ obj.speed } extra={<div> { \"实时上传速度：\"+ obj.upSpeed } </div>}/>\n                                        </Card>\n\n                                        </Item>)\n                            })\n                    }\n\n\n\n            </List>\n\n\n    </div>\n);\n\n}\n}\n\nconst JsDemoWapper = createForm()(JsDemo);\nReactDOM.render(<JsDemoWapper />,  document.getElementById('root'));\nexport default JsDemoWapper\n\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport { DatePicker, List, Button, InputItem,Card } from 'antd-mobile';\nimport { createForm } from 'rc-form';\nimport axios from \"axios\";\n\nimport {moment} from \"moment\";\nimport \"moment/locale/zh-cn\"\n\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\nconst utcOffset = new Date(now.getTime() - (now.getTimezoneOffset() * 60000));\n// console.log(now, utcOffset, now.toISOString(), utcOffset.toISOString());\n\n\nconst server_path='http://192.168.16.198:8081';\n\n\nclass Test extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            list:[],\n            mychecked:true\n        }\n    }\n\n\n    getDataA() {\n        axios.get(server_path+'/statistic/getUnavailableTimeList')\n            .then((res)=>{\n\n                // 注意this指向\n                this.setState({\n                    list:res.data\n                });\n                console.log(\"res.data=\" + JSON.stringify(res.data) );\n                //debugger\n\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n\n\n    formatDate = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    onChange1=(obj,i,type,time) => {\n       // debugger\n        const timeString=this.formatDate(time);\n        console.log(\"xxxx===\" ,i, time, timeString);\n\n        if(type==='startTimeStr'){\n            obj.startTime=time.getTime();\n            obj.startTimeStr=timeString;\n        }else {\n            obj.endTime=time.getTime();\n            obj.endTimeStr=timeString;\n        }\n\n        console.log(\"xxxx===\" ,this.state.list);\n        this.setState({list:this.state.list});\n\n        this.updateDataA();\n\n    }\n\n\n\n    updateDataA =()=> {\n\n        // let postData = {list:this.state.list};\n        let postData =this.state.list;\n\n\n        axios({\n            url:server_path+'/statistic/updateUnavailableTimeList',\n            method: 'post',\n            data:postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res)=>{\n\n                // 注意this指向\n                this.setState({\n                    list:res.data\n                });\n                console.log(\"res.data=\" + JSON.stringify(res.data) );\n                //debugger\n\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n\n\n    componentDidMount() {\n        console.log(\"jsdemob componentDidMount 进来了。。。\")\n        this.getDataA();\n    }\n\n\n    state = {\n        dpValue: now,\n        idt: utcOffset.toISOString().slice(0, 10),\n    }\n\n\n\n    onSubmit = () => {\n        debugger\n\n        this.props.form.validateFields({ force: true }, (error) => {\n\n            console.log(\"aliooalioo this.props.form.getFieldsValue()=\"+this.props.form.getFieldsValue())\n            // debugger\n\n            // if (!error) {\n            //     console.log(this.props.form.getFieldsValue());\n            // } else {\n            //     console.log(error);\n            //     alert('Validation failed');\n            // }\n        });\n\n\n\n    }\n    onReset = () => {\n        this.props.form.resetFields();\n        setTimeout(() => console.log(this.state), 0);\n    }\n    validateIdp = (rule, date, callback) => {\n        if (isNaN(Date.parse(date))) {\n            callback(new Error('Invalid Date'));\n        } else {\n            const cDate = new Date(date);\n            const newDate = new Date(+this.state.dpValue);\n            newDate.setFullYear(cDate.getFullYear());\n            newDate.setMonth(cDate.getMonth());\n            newDate.setDate(cDate.getDate());\n            // this.setState({ dpValue: newDate });\n            setTimeout(() => this.props.form.setFieldsValue({ dp: newDate }), 10);\n            callback();\n        }\n    }\n    validateDatePicker = (rule, date, callback) => {\n        console.log(\"alioo date=\"+date)\n        // debugger\n        if (date && date.getMinutes() !== 15) {\n            callback();\n        } else {\n            callback(new Error('15 is invalid'));\n        }\n    }\n    render() {\n        const { getFieldProps, getFieldError } = this.props.form;\n        return (<form>\n            <List\n                className=\"date-picker-list\"\n                renderFooter={() => getFieldError('dp') && getFieldError('dp').join(',')}\n            >\n\n\n                {\n                    this.state.list.map( (obj, i )=>{\n                        console.log(\"i=\"+i+\",obj=\"+JSON.stringify(obj))\n\n                        // //TTFFFFTFFTFF ali15可上网   ；TTTFFFTFFTFF 不可上网\n                        // //FTFFFFTFFTFF ali11可上网   ；FFTFFFTFFTFF 不可上网\n                        // //FTFFFFFFFTFF x55  可上网   ；FTTFFFFFFTFF 不可上网\n                        // //FFFFFFTFFTFF 离线设备可上网 ；FFTFFFTFFTFF 不可上网\n                        // //var mychecked = ('FTFFFFTFFTFF' == obj.flag || 'FTFFFFFFFTFF' == obj.flag || 'FFFFFFTFFTFF' == obj.flag || 'TTFFFFTFFTFF' == obj.flag) ? true : false;\n                        //\n                        // //第3位是F 可以上网，第3位是T不可上网\n                        // var mychecked = ( 'F' === obj.flag.substring(2,3) )  ? true : false;\n                        //\n                        // console.log(obj.name+\",\"+ obj.flag+\",mychecked=\"+mychecked);\n\n                        //debugger\n                        return (\n\n\n\n                            <List.Item>\n                                <Card full>\n                                    <Card.Header\n                                        title='禁用时间区间'\n                                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n\n                                    />\n                                    <Card.Body>\n                                        <div>\n                                            {/*<DatePicker mode='time' onChange={v=>this.onChange1(v,'aavv') }*/}\n                                                        {/*{...getFieldProps('dpStartTime'+i , {*/}\n                                                            {/*initialValue: new Date(obj.startTime),*/}\n                                                            {/*rules: [*/}\n                                                                {/*{ required: true, message: 'Must select a date' },*/}\n                                                                {/*{ validator: this.validateDatePicker },*/}\n                                                            {/*],*/}\n                                                        {/*})}*/}\n                                            {/*>*/}\n                                                {/*<List.Item arrow=\"horizontal\">开始禁用时间</List.Item>*/}\n                                            {/*</DatePicker>*/}\n\n                                            {/*<DatePicker mode='time'*/}\n                                                        {/*{...getFieldProps('dpEndTime'+i , {*/}\n                                                            {/*initialValue: new Date(obj.endTime),*/}\n                                                            {/*rules: [*/}\n                                                                {/*{ required: true, message: 'Must select a date' },*/}\n                                                                {/*{ validator: this.validateDatePicker },*/}\n                                                            {/*],*/}\n                                                        {/*})}*/}\n                                            {/*>*/}\n                                                {/*<List.Item arrow=\"horizontal\">结束禁用时间</List.Item>*/}\n                                            {/*</DatePicker>*/}\n\n\n                                            <DatePicker\n                                                mode=\"time\"\n                                                minuteStep={2}\n                                                // use12Hours\n                                                value= {new Date(obj.startTime)}\n                                                onChange={time => this.onChange1(obj,i,'startTimeStr',time )}\n                                            >\n                                                <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>\n                                            </DatePicker>\n\n                                            <DatePicker\n                                                mode=\"time\"\n                                                minuteStep={2}\n                                                // use12Hours\n                                                value= {new Date(obj.endTime)}\n                                                onChange={time => this.onChange1(obj,i,'endTimeStr',time )}\n                                            >\n                                                <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>\n                                            </DatePicker>\n\n\n                                        </div>\n\n\n                                    </Card.Body>\n                                    {/*<Card.Footer content={ \"实时下载速度：222\" } extra={<div> { \"实时上传速度：222\"  } </div>}/>*/}\n                                </Card>\n                            </List.Item>\n\n\n\n                        )\n                    })\n                }\n\n\n\n                <List.Item>\n                    <Button type=\"primary\" size=\"small\" inline onClick={this.onSubmit}>Submit</Button>\n                    {/*<Button size=\"small\" inline style={{ marginLeft: '2.5px' }} onClick={this.onReset}>Reset</Button>*/}\n                </List.Item>\n            </List>\n        </form>);\n    }\n}\n\nconst TestWrapper = createForm()(Test);\n\nReactDOM.render(<TestWrapper />,  document.getElementById('root'));\n\nexport default TestWrapper\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport { Button, WhiteSpace, WingBlank } from 'antd-mobile';\n\nconst ButtonExample = () => (\n    <WingBlank>\n        <Button>default</Button><WhiteSpace />\n        <Button disabled>default disabled</Button><WhiteSpace />\n\n        <Button type=\"primary\">primary</Button><WhiteSpace />\n        <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace />\n\n        <Button type=\"warning\">warning</Button><WhiteSpace />\n        <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace />\n\n        <Button loading>loading button</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace />\n        <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\" />}>with custom icon</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\" inline size=\"small\" style={{ marginRight: '4px' }}>with icon and inline</Button>\n        <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n        <WhiteSpace />\n\n        {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n        {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline style={{ marginRight: '4px' }}>inline primary</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline style={{ marginRight: '4px' }} className=\"am-button-borderfix\">inline ghost</Button>\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }}>primary</Button>\n        <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n        <WhiteSpace />\n        <Button type=\"ghost\" inline size=\"small\" style={{ marginRight: '4px' }}>ghost</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n    </WingBlank>\n);\nReactDOM.render(<ButtonExample />,  document.getElementById('root'));\nexport default ButtonExample\n\n\n","import React from \"react\";\nimport { TabBar } from 'antd-mobile';\nimport './TabBarExample.css'\n\n\nimport Jsdemo from './jsdemo';\nimport Jsdemob from './jsdemob';\nimport Jsdemoc from './jsdemoc';\n\n\nclass TabBarExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'blueTab',\n            hidden: false,\n            fullScreen: true,\n        };\n    }\n\n\n    renderContent(pageText) {\n        if(pageText==='jsdemo'){\n            return  <Jsdemo/>\n        }else if(pageText==='jsdemob'){\n            return  <Jsdemob/>\n        }else if(pageText==='jsdemoc'){\n            return  <Jsdemoc/>\n        }\n        // return (\n        //     <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\n        //         <div style={{ paddingTop: 60 }}>Clicked “{pageText}” tab， show “{pageText}” information</div>\n        //         <a style={{ display: 'block', marginTop: 40, marginBottom: 20, color: '#108ee9' }}\n        //            onClick={(e) => {\n        //                e.preventDefault();\n        //                this.setState({\n        //                    hidden: !this.state.hidden,\n        //                });\n        //            }}\n        //         >\n        //             Click to show/hide tab-bar\n        //         </a>\n        //         <a style={{ display: 'block', marginBottom: 600, color: '#108ee9' }}\n        //            onClick={(e) => {\n        //                e.preventDefault();\n        //                this.setState({\n        //                    fullScreen: !this.state.fullScreen,\n        //                });\n        //            }}\n        //         >\n        //             Click to switch fullscreen\n        //         </a>\n        //     </div>\n        // );\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? { position: 'fixed', height: '100%', width: '100%', top: 0 } : { height: 400 }}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"路由开关\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'blueTab'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'blueTab',\n                            });\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('jsdemo')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'redTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'redTab',\n                            });\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('jsdemob')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"待启用\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'greenTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'greenTab',\n                            });\n                        }}\n                    >\n                        {this.renderContent('jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default TabBarExample\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\n\n\nimport TabBarExample from \"./TabBarExample\";\n\nReactDOM.render(\n        <TabBarExample/>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}