{"version":3,"sources":["component/MachineList.js","component/timelist/TimeItem.js","component/timelist/UnavailableTimeList.js","component/chart/NetChartItem.js","component/chart/NetChartList.js","jsdemoc.js","HomePage.js","component/online/OnLineItem.js","component/online/OnLineList.js","component/online/Least3HoursOnLineList.js","component/online/Least1HoursOnLineList.js","OnLinePage.js","OnLinePageTest.js","index.js"],"names":["Item","List","MachineList","props","state","list","mychecked","console","log","this","getList","axios","get","server_path","then","res","setState","data","catch","err","obj","event","mac","act","checked","size","map","i","key","full","style","background","Header","title","name","ip","thumb","extra","onChange","accessCtrl","bind","Body","Footer","content","downSpeed","upSpeed","React","Component","TimeItem","mode","minuteStep","value","Date","startTime","time","arrow","endTime","UnavailableTimeList","onChangeTime","type","timeString","formatTime","getTime","startTimeStr","endTimeStr","updateList","date","pad","n","timeStr","getHours","getMinutes","postData","url","method","JSON","stringify","className","NetChartItem","machineName","item","net","push","config","height","padding","xField","yField","point","shape","label","stroke","fill","NetChartList","ButtonExample","selectedTab","match","params","location","pathname","disabled","loading","icon","src","alt","inline","marginRight","history","createBrowserHistory","HomePage","hidden","fullScreen","process","pageText","position","width","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","selectedIcon","selected","badge","onPress","data-seed","renderContent","dot","OnLineItem","nextProps","subUrl","OnLineList","getYYYYMMDDHHmm","moment","format","visible1","visible2","wrap","onClick","prevState","visible","defaultValue","precision","onClose","onConfirm","val","val2","Least3HoursOnLineList","subtract","substring","Least1HoursOnLineList","OnLinePage","Precision","useState","setVisible1","setVisible2","Toast","show","toString","ReactDOM","render","path","exact","component","Jsdemoc","document","getElementById"],"mappings":"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","file":"static/js/main.5b438a6f.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, List, Switch, WhiteSpace} from 'antd-mobile';\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\nclass MachineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"MachineList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n\n    getList() {\n        axios.get(this.props.server_path + '/statistic/getMachineList2')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    // list: res.data.terminals\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    accessCtrl(obj, event) {\n\n        var mac = obj.mac;\n        var act = obj.checked ? \"on\" : \"off\";\n\n        //debugger\n        axios.get(this.props.server_path + '/statistic/setNetWorkSwitch?mac=' + mac + '&act=' + act)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    // list: res.data.terminals\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <WhiteSpace size=\"lg\"/>\n                <List  >\n\n                    {\n                        this.state.list.map((obj, i) => {\n                            //console.log(\"obj=\"+JSON.stringify(obj))\n\n                            var mychecked = obj.checked;\n\n                            //debugger\n                            return (\n                                <Item key={i}>\n\n                                    <Card full style={obj.state == \"off_online\" ? {background: \"#EAEAEA\"} : {background: \"#F0FFFF\"}}>\n                                        <Card.Header\n                                            title={obj.name + \" (\" + (obj.ip ? obj.ip : '--') + \")\"}\n                                            thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                                            extra={<Switch\n                                                checked={mychecked}\n                                                onChange={this.accessCtrl.bind(this, obj)}\n                                            />\n\n                                            }\n                                        />\n                                        <Card.Body>\n                                            <div>{obj.mac} </div>\n                                        </Card.Body>\n                                        <Card.Footer content={\"实时下载速度：\" + obj.downSpeed} extra={<div> {\"实时上传速度：\" + obj.upSpeed} </div>}/>\n                                    </Card>\n\n                                </Item>)\n                        })\n                    }\n\n\n                </List>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default MachineList\n\n","import React from \"react\";\n\nimport {Card, DatePicker, List} from 'antd-mobile';\n\nclass TimeItem extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     //debugger\n    // }\n\n    render() {\n        return (\n            <List.Item key={this.props.i}>\n                <Card full>\n                    <Card.Header\n                        title='禁用时间区间'\n                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n\n                    />\n                    <Card.Body>\n                        <div>\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.startTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'startTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>\n                            </DatePicker>\n\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.endTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'endTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>\n                            </DatePicker>\n                        </div>\n\n                    </Card.Body>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\n\nexport default TimeItem\n","import React from \"react\";\n\nimport {List} from 'antd-mobile';\nimport axios from \"axios\";\nimport TimeItem from \"./TimeItem\";\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\n\nclass UnavailableTimeList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"UnavailableTimeList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(server_path + '/statistic/getUnavailableTimeList')\n            .then((res) => {\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    onChangeTime = (obj, i, type, time) => {\n        // debugger\n        const timeString = this.formatTime(time);\n        console.log(\"onChangeTime===\", i, time, timeString);\n\n        if (type === 'startTimeStr') {\n            obj.startTime = time.getTime();\n            obj.startTimeStr = timeString;\n        } else {\n            obj.endTime = time.getTime();\n            obj.endTimeStr = timeString;\n        }\n\n        console.log(\"this.state.list===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateList();\n    }\n\n\n    formatTime = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    updateList = () => {\n\n        // let postData = {list:this.state.list};\n        let postData = this.state.list;\n\n        axios({\n            url: this.props.server_path + '/statistic/updateUnavailableTimeList',\n            method: 'post',\n            data: postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res) => {\n            // 注意this指向\n            this.setState({\n                list: res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data));\n            //debugger\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (<form>\n            <List className=\"date-picker-list\">\n                {\n                    this.state.list.map((obj, i) => {\n                        console.log(\"timelist i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                        //debugger\n                        return (<TimeItem key={i} obj={obj} onChange={this.onChangeTime}/>)\n                    })\n                }\n\n            </List>\n        </form>);\n    }\n}\n\n\nexport default UnavailableTimeList\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './NetChartItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass NetChartItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"ChartItem componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(server_path + '/statistic/getNetWorkData?startTime=&endTime=&machineName=' + this.props.machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default NetChartItem;\n","import React from 'react';\nimport NetChartItem from \"./NetChartItem\";\nimport {List} from 'antd-mobile';\n\n\nclass NetChartList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartList componentDidMount 进来了。。。\")\n    }\n\n\n    render() {\n        return (\n            <List>\n                <NetChartItem server_path={this.props.server_path} machineName='X3-55'/>\n                <NetChartItem server_path={this.props.server_path} machineName='CM201-2'/>\n                <NetChartItem server_path={this.props.server_path} machineName='ali6s'/>\n                <NetChartItem server_path={this.props.server_path} machineName='ali11'/>\n                <NetChartItem server_path={this.props.server_path} machineName='alioo15'/>\n                <NetChartItem server_path={this.props.server_path} machineName='raspberrypi'/>\n                <NetChartItem server_path={this.props.server_path} machineName='hlnew50'/>\n                <NetChartItem server_path={this.props.server_path} machineName='hlold'/>\n\n            </List>\n        );\n    }\n\n}\n\n\nexport default NetChartList\n\n\n\n\n\n","import React from 'react';\nimport {Button, WhiteSpace, WingBlank} from 'antd-mobile';\n\n\nclass ButtonExample extends React.Component {\n    constructor(props) {\n        super(props);\n        var selectedTab = \"\";\n\n        // debugger\n        if (this.props.match && this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.ButtonExample this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.ButtonExample this.props.match =\", this.props.match)\n            console.log(\"5.ButtonExample selectedTab =\", selectedTab)\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Jsdemoc componentDidMount 进来了。。。\")\n    }\n\n\n    render() {\n        return (\n            <WingBlank>\n                <Button>default</Button><WhiteSpace/>\n                <Button disabled>default disabled</Button><WhiteSpace/>\n\n                <Button type=\"primary\">primary</Button><WhiteSpace/>\n                <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace/>\n\n                <Button type=\"warning\">warning</Button><WhiteSpace/>\n                <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace/>\n\n                <Button loading>loading button</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace/>\n                <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\"/>}>with custom icon</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\" inline size=\"small\" style={{marginRight: '4px'}}>with icon and inline</Button>\n                <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n                <WhiteSpace/>\n\n                {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n                {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline style={{marginRight: '4px'}}>inline primary</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline style={{marginRight: '4px'}} className=\"am-button-borderfix\">inline ghost</Button>\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline size=\"small\" style={{marginRight: '4px'}}>primary</Button>\n                <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n                <WhiteSpace/>\n                <Button type=\"ghost\" inline size=\"small\" style={{marginRight: '4px'}}>ghost</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n            </WingBlank>\n        )\n    }\n\n}\n\nexport default ButtonExample\n\n\n// const ButtonExample = () => (\n//     <WingBlank>\n//         <Button>default</Button><WhiteSpace />\n//         <Button disabled>default disabled</Button><WhiteSpace />\n//\n//         <Button type=\"primary\">primary</Button><WhiteSpace />\n//         <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace />\n//\n//         <Button type=\"warning\">warning</Button><WhiteSpace />\n//         <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace />\n//\n//         <Button loading>loading button</Button><WhiteSpace />\n//         <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace />\n//         <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\" />}>with custom icon</Button><WhiteSpace />\n//         <Button icon=\"check-circle-o\" inline size=\"small\" style={{ marginRight: '4px' }}>with icon and inline</Button>\n//         <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n//         <WhiteSpace />\n//\n//         {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n//         {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n//\n//         <WhiteSpace />\n//         <Button type=\"primary\" inline style={{ marginRight: '4px' }}>inline primary</Button>\n//         {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n//         <Button type=\"ghost\" inline style={{ marginRight: '4px' }} className=\"am-button-borderfix\">inline ghost</Button>\n//\n//         <WhiteSpace />\n//         <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }}>primary</Button>\n//         <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n//         <WhiteSpace />\n//         <Button type=\"ghost\" inline size=\"small\" style={{ marginRight: '4px' }}>ghost</Button>\n//         {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n//         <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n//     </WingBlank>\n// );\n// ReactDOM.render(<ButtonExample />,  document.getElementById('root'));\n// export default ButtonExample\n\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\nimport './HomePage.css'\n\n\nimport MachineList from './component/MachineList';\nimport UnavailableTimeList from './component/timelist/UnavailableTimeList';\n// import NetChartItem from './component/chart/NetChartItem';\nimport NetChartList from './component/chart/NetChartList';\nimport Jsdemoc from './jsdemoc';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        // debugger\n        var selectedTab = \"\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.HomePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.HomePage this.props.match =\", this.props.match)\n            console.log(\"5.HomePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n        };\n\n        console.log(\"1.HomePage REACT_APP_BASE_URL=\", process.env.REACT_APP_BASE_URL, process.env.NODE_ENV)\n        console.log(\"2.HomePage REACT_APP_SERVER_PATH=\", process.env.REACT_APP_SERVER_PATH, process.env.NODE_ENV)\n\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境')\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境')\n        }\n\n    }\n\n    renderContent(pageText) {\n        if (pageText === 'machine-list') {\n            return <MachineList server_path={server_path}/>\n        } else if (pageText === 'time-list') {\n            return <UnavailableTimeList server_path={server_path} {...this.props} />\n            // } else if (pageText === 'net-chart-item') {\n            //     return <NetChartItem server_path={server_path} machineName='X3-55'/>\n        } else if (pageText === 'net-chart-list') {\n            return <NetChartList server_path={server_path}/>\n        } else if (pageText === 'jsdemoc') {\n            return <Jsdemoc/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"路由开关\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'machine-list'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'machine-list',\n                            });\n                            history.push('/home/machine-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('machine-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'time-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'time-list',\n                            });\n                            history.push('/home/time-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('time-list')}\n                    </TabBar.Item>\n                    {/*<TabBar.Item*/}\n                    {/*icon={*/}\n                    {/*<div style={{*/}\n                    {/*width: '22px',*/}\n                    {/*height: '22px',*/}\n                    {/*background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'*/}\n                    {/*}}*/}\n                    {/*/>*/}\n                    {/*}*/}\n                    {/*selectedIcon={*/}\n                    {/*<div style={{*/}\n                    {/*width: '22px',*/}\n                    {/*height: '22px',*/}\n                    {/*background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'*/}\n                    {/*}}*/}\n                    {/*/>*/}\n                    {/*}*/}\n                    {/*title=\"图表\"*/}\n                    {/*key=\"Koubei\"*/}\n                    {/*badge={'new'}*/}\n                    {/*selected={this.state.selectedTab === 'blackTab'}*/}\n                    {/*onPress={() => {*/}\n                    {/*this.setState({*/}\n                    {/*selectedTab: 'blackTab',*/}\n                    {/*});*/}\n                    {/*}}*/}\n                    {/*data-seed=\"logId1\"*/}\n                    {/*>*/}\n                    {/*{this.renderContent('net-chart-item')}*/}\n                    {/*</TabBar.Item>*/}\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"图表测试\"\n                        key=\"Koubei\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'net-chart-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'net-chart-list',\n                            });\n                            history.push('/home/net-chart-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('net-chart-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"待启用\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'jsdemoc'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'jsdemoc',\n                            });\n                            history.push('jsdemoc');\n\n                        }}\n                    >\n                        {this.renderContent('/home/jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default HomePage\n\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './OnLineItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass OnLineItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartItem componentDidMount 进来了。。。machineName:\" + this.props.machineName + \" startTime:\" + this.props.startTime);\n        this.getList(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // debugger\n        console.log(\"NetChartItem componentWillReceiveProps 进来了。。。machineName:\" + nextProps.machineName + \" startTime:\" + nextProps.startTime);\n        this.getList(nextProps);\n\n    }\n\n\n    getList(props) {\n        axios.get(server_path + props.subUrl + '?startTime=' + props.startTime + '&endTime=' + props.endTime + '&machineName=' + props.machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default OnLineItem;\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass OnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible1: false,\n            startTime: moment().format('YYYY-MM-DD 00:00'),\n            visible2: false,\n            endTime: moment().format('YYYY-MM-DD 23:59'),\n        }\n\n    }\n\n\n    componentDidMount() {\n        console.log(\"OnLineList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n\n    render() {\n\n        // const startTime = moment().format('YYYYMMDD0000');\n        // const endTime = moment().format('YYYYMMDDHHmm');\n        // const startTime = moment(this.state.startTime, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n        // const endTime = moment(this.state.endTime, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default OnLineList\n\n\n\n\n\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass Least3HoursOnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let startTime = moment().subtract(3, \"hours\").format('YYYY-MM-DD HH:mm');\n        let endTime = moment().format('YYYY-MM-DD HH:mm');\n\n        if (startTime.substring(0, 8) !== endTime.substring(0, 8)) {\n            startTime = moment().format('YYYY-MM-DD 00:00');\n        }\n\n        this.state = {\n            visible1: false,\n            startTime: startTime,\n            visible2: false,\n            endTime: endTime,\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Least3HoursNetChartList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n    render() {\n\n        // debugger\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default Least3HoursOnLineList\n\n\n\n\n\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass Least1HoursOnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let startTime = moment().subtract(1, \"hours\").format('YYYY-MM-DD HH:mm');\n        let endTime = moment().format('YYYY-MM-DD HH:mm');\n\n        if (startTime.substring(0, 8) !== endTime.substring(0, 8)) {\n            startTime = moment().format('YYYY-MM-DD 00:00');\n        }\n\n        this.state = {\n            visible1: false,\n            startTime: startTime,\n            visible2: false,\n            endTime: endTime,\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Least1HoursNetChartList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n    render() {\n\n        // debugger\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default Least1HoursOnLineList\n\n\n\n\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\n\nimport './OnLinePage.css'\n\n\nimport OnLineList from './component/online/OnLineList';\nimport Least3HoursOnLineList from './component/online/Least3HoursOnLineList';\nimport Least1HoursOnLineList from './component/online/Least1HoursOnLineList';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nclass OnLinePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // debugger\n        var selectedTab = \"online-list\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"1.OnLinePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"2.OnLinePage this.props.match =\", this.props.match)\n            console.log(\"3.OnLinePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n        };\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        }\n\n    }\n\n    renderContent(pageText) {\n        if (pageText === 'online-list') {\n            return <OnLineList/>\n        } else if (pageText === 'least3-online-list') {\n            return <Least3HoursOnLineList/>\n        } else if (pageText === 'least1-online-list') {\n            return <Least1HoursOnLineList/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"联网时间\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'online-list'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'online-list',\n                            });\n                            history.push('online-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近3小时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'least3-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least3-online-list',\n                            });\n                            history.push('least3-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least3-online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近1小时\"\n                        key=\"Koubei2\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'least1-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least1-online-list',\n                            });\n                            history.push('least1-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least1-online-list')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default OnLinePage\n\n","import React, { useState } from 'react'\n\nimport { Button, DatePicker, Space, Toast } from 'antd-mobile-v5'\nimport moment from 'moment'\n\nconst now = new Date()\n\nfunction BasicDemo() {\n    const [visible, setVisible] = useState(false)\n    return (\n        <>\n            <Button\n                onClick={() => {\n                    setVisible(true)\n                }}\n            >\n                选择\n            </Button>\n            <DatePicker\n                title='时间选择'\n                visible={visible}\n                onClose={() => {\n                    setVisible(false)\n                }}\n                defaultValue={now}\n                max={now}\n                onConfirm={val => {\n                    Toast.show(val.toDateString())\n                }}\n            />\n        </>\n    )\n}\n\nfunction RenderChildrenDemo() {\n    const [visible, setVisible] = useState(false)\n    return (\n        <Space align='center'>\n            <Button\n                onClick={() => {\n                    setVisible(true)\n                }}\n            >\n                选择\n            </Button>\n            <DatePicker\n                visible={visible}\n                onClose={() => {\n                    setVisible(false)\n                }}\n                defaultValue={now}\n                max={now}\n            >\n                {value => value?.toDateString()}\n            </DatePicker>\n        </Space>\n    )\n}\n\nfunction onChange(date, dateString) {\n    console.log(date, dateString);\n}\n\nfunction Precision() {\n    const [visible1, setVisible1] = useState(false)\n    const [visible2, setVisible2] = useState(false)\n    return (\n        <Space wrap>\n\n            <>\n                <Button\n                    onClick={() => {\n                        setVisible1(true)\n                    }}\n                >\n                    年-月\n                </Button>\n                <DatePicker\n                    visible={visible1}\n                    onClose={() => {\n                        setVisible1(false)\n                    }}\n                    precision='month'\n                    onConfirm={val => {\n                        Toast.show(val.toString())\n                    }}\n                />\n            </>\n            <>\n                <Button\n                    onClick={() => {\n                        setVisible2(true)\n                    }}\n                >\n                    年-月-日-时-分\n                </Button>\n                <DatePicker\n                    visible={visible2}\n                    onClose={() => {\n                        setVisible2(false)\n                    }}\n                    precision='minute'\n                    onConfirm={val => {\n                        Toast.show(val.toString())\n                    }}\n                />\n            </>\n        </Space>\n    )\n}\n\nexport default () => {\n    return (\n        <>\n            {/*<DemoBlock title='基础用法'>*/}\n                {/*<BasicDemo />*/}\n            {/*</DemoBlock>*/}\n            {/*<DemoBlock title='渲染所选值'>*/}\n                {/*<RenderChildrenDemo />*/}\n            {/*</DemoBlock>*/}\n            {/*<DemoBlock title='控制选择精度'>*/}\n                {/*<Precision />*/}\n            {/*</DemoBlock>*/}\n            <Precision />\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd-mobile/dist/antd-mobile.css';\n// import 'antd/dist/antd.css';\nimport './index.css';\n\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport HomePage from \"./HomePage\";\nimport OnLinePage from \"./OnLinePage\";\nimport OnLinePageTest from \"./OnLinePageTest\";\nimport Jsdemoc from \"./jsdemoc\";\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <Route path='/' exact component={HomePage}></Route>\n        <Route path='/home/:selectedTab' exact component={HomePage}></Route>\n        <Route path='/online/:selectedTab' exact component={OnLinePage}></Route>\n        <Route path='/online/test' exact component={OnLinePageTest}></Route>\n        <Route path='/detai/:id' exact component={Jsdemoc}></Route>\n    </BrowserRouter>,\n\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}