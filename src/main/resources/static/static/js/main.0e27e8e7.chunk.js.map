{"version":3,"sources":["logo.svg","serviceWorker.js","jsdemo.js","jsdemob.js","jsdemoc.js","TabBarExample.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Item","List","JsDemo","props","state","list","mychecked","axios","get","then","res","setState","data","console","log","JSON","stringify","catch","err","obj","event","alias","switchCtrl","this","getDataA","form","getFieldProps","size","map","mydisabled","full","Header","title","ip","mac","thumb","extra","checked","onChange","accessCtrl","bind","disabled","Body","downloadTotal","Footer","content","downloadSpeed","uploadSpeed","React","Component","JsDemoWapper","createForm","ReactDOM","render","document","getElementById","BasicInput","value","onSubmit","validateFields","force","error","alert","getFieldsValue","onReset","resetFields","validateAccount","rule","callback","length","Error","getFieldError","renderHeader","renderFooter","join","rules","required","message","validator","clear","onErrorClick","placeholder","type","initialValue","valuePropName","style","padding","defaultValue","width","minWidth","showNumber","inline","onClick","marginLeft","BasicInputWrapper","ButtonExample","loading","icon","src","alt","marginRight","className","TabBarExample","selectedTab","hidden","fullScreen","pageText","backgroundColor","height","textAlign","paddingTop","display","marginTop","marginBottom","color","e","preventDefault","position","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","key","background","selectedIcon","selected","badge","onPress","data-seed","renderContent","dot","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e27e8e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card, WhiteSpace } from 'antd-mobile';\nimport { List, InputItem, Switch, Stepper, Range, Button} from 'antd-mobile';\nimport {createForm} from \"rc-form\";\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\nclass JsDemo extends React.Component {\n\nconstructor(props){\n        super(props);\n        this.state={\n        list:[],\n        mychecked:true\n        }\n}\n\ngetDataA() {\n    axios.get('http://192.168.1.100:8080/statistic/index')\n    .then((res)=>{\n\n            // 注意this指向\n            this.setState({\n                    list:res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data) );\n            //debugger\n\n    })\n    .catch((err)=>{\n            console.log(err)\n    })\n}\n\n\naccessCtrl(obj,event) {\n\n    var alias=obj.alias;\n    var switchCtrl=obj.switchCtrl==0?1:0;\n\n    //debugger\n    axios.get('http://192.168.1.100:8080/statistic/accessCtrl?alias='+ alias+'&switchCtrl='+switchCtrl)\n    .then((res)=>{\n\n        // 注意this指向\n        this.setState({\n            list:res.data\n        });\n        console.log(\"res.data=\" + JSON.stringify(res.data) );\n        //debugger\n\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n\n}\n\n\ncomponentDidMount() {\n        console.log(\"进来了。。。\")\n        this.getDataA();\n}\n\n\nrender() {\nconst { getFieldProps } = this.props.form;\n\nreturn (\n    <div>\n            <WhiteSpace size=\"lg\"/>\n            <List\n            >\n\n\n                    {\n                            this.state.list.map(obj=>{\n                                    console.log(\"obj=\"+JSON.stringify(obj))\n                                    //switchCtrl 0 可以上网 ；1 不可以上网 ; null 可以上网，但是不能设置\n\n                                    var mychecked=1==obj.switchCtrl ? false:true ;\n                                    var mydisabled=null==obj.switchCtrl ? true:false ;\n                                    console.log(\"mychecked=\"+mychecked);\n\n                                    //debugger\n                                    return (\n                                        <Item>\n\n                                        <Card full>\n                                                <Card.Header\n                                                    title={obj.alias + \" ( \"+obj.ip+\" | \"+obj.mac+\")\"}\n                                                    thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                                                    extra={<Switch\n                                                        checked={ mychecked }\n                                                        // onChange={() => {\n                                                            // this.setState({\n                                                            // checked: !this.state.mychecked\n                                                            //});\n                                                            //alert(\"666\");\n                                                        // }}\n                                                        onChange={this.accessCtrl.bind(this,obj)}\n                                                        disabled={mydisabled}\n                                                        />\n\n                                                    }\n                                                />\n                                                <Card.Body>\n                                                        <div>{ \"累计流量: \"+ obj.downloadTotal +\"(download) | \"+ obj.downloadTotal +\"(upload)\"} </div>\n                                                </Card.Body>\n                                                <Card.Footer content={ \"实时下载速度：\"+ obj.downloadSpeed } extra={<div> { \"实时上传速度：\"+ obj.uploadSpeed } </div>}/>\n                                        </Card>\n\n                                        </Item>)\n                            })\n                    }\n\n\n\n            </List>\n\n\n    </div>\n);\n\n}\n}\n\nconst JsDemoWapper = createForm()(JsDemo);\nReactDOM.render(<JsDemoWapper />,  document.getElementById('root'));\nexport default JsDemoWapper\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { List, InputItem, Switch, Stepper, Range, Button } from 'antd-mobile';\nimport { createForm } from 'rc-form';\n\nconst Item = List.Item;\n\nclass BasicInput extends React.Component {\n    state = {\n        value: 1,\n    }\n    onSubmit = () => {\n        this.props.form.validateFields({ force: true }, (error) => {\n            if (!error) {\n                console.log(this.props.form.getFieldsValue());\n            } else {\n                alert('Validation failed');\n            }\n        });\n    }\n    onReset = () => {\n        this.props.form.resetFields();\n    }\n    validateAccount = (rule, value, callback) => {\n        if (value && value.length > 4) {\n            callback();\n        } else {\n            callback(new Error('At least four characters for account'));\n        }\n    }\n    render() {\n        const { getFieldProps, getFieldError } = this.props.form;\n\n        return (<form>\n            <List\n                renderHeader={() => 'Form Validation'}\n                renderFooter={() => getFieldError('account') && getFieldError('account').join(',')}\n            >\n                <InputItem\n                    {...getFieldProps('account', {\n                        // initialValue: 'little ant',\n                        rules: [\n                            { required: true, message: 'Please input account' },\n                            { validator: this.validateAccount },\n                        ],\n                    })}\n                    clear\n                    error={!!getFieldError('account')}\n                    onErrorClick={() => {\n                        alert(getFieldError('account').join('、'));\n                    }}\n                    placeholder=\"please input account\"\n                >Account</InputItem>\n                <InputItem {...getFieldProps('password')} placeholder=\"please input password\" type=\"password\">\n                    Password\n                </InputItem>\n                <Item\n                    extra={<Switch {...getFieldProps('1', { initialValue: true, valuePropName: 'checked' })} />}\n                >Confirm Infomation</Item>\n                <Item><div style={{ padding: 7 }}><Range defaultValue={[20, 80]} /></div></Item>\n                <Item extra={<Stepper style={{ width: '100%', minWidth: '100px' }} showNumber size=\"small\" defaultValue={20} />}>Number of Subscribers</Item>\n                <Item>\n                    <Button type=\"primary\" size=\"small\" inline onClick={this.onSubmit}>Submit</Button>\n                    <Button size=\"small\" inline style={{ marginLeft: '2.5px' }} onClick={this.onReset}>Reset</Button>\n                </Item>\n            </List>\n        </form>);\n    }\n}\n\nconst BasicInputWrapper = createForm()(BasicInput);\nReactDOM.render(<BasicInputWrapper />,  document.getElementById('root'));\nexport default BasicInputWrapper\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\nimport { Button, WhiteSpace, WingBlank } from 'antd-mobile';\n\nconst ButtonExample = () => (\n    <WingBlank>\n        <Button>default</Button><WhiteSpace />\n        <Button disabled>default disabled</Button><WhiteSpace />\n\n        <Button type=\"primary\">primary</Button><WhiteSpace />\n        <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace />\n\n        <Button type=\"warning\">warning</Button><WhiteSpace />\n        <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace />\n\n        <Button loading>loading button</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace />\n        <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\" />}>with custom icon</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\" inline size=\"small\" style={{ marginRight: '4px' }}>with icon and inline</Button>\n        <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n        <WhiteSpace />\n\n        {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n        {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline style={{ marginRight: '4px' }}>inline primary</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline style={{ marginRight: '4px' }} className=\"am-button-borderfix\">inline ghost</Button>\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }}>primary</Button>\n        <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n        <WhiteSpace />\n        <Button type=\"ghost\" inline size=\"small\" style={{ marginRight: '4px' }}>ghost</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n    </WingBlank>\n);\nReactDOM.render(<ButtonExample />,  document.getElementById('root'));\nexport default ButtonExample\n\n\n","import { TabBar } from 'antd-mobile';\nimport React from \"react\";\nimport './TabBarExample.css'\n\n\nimport Jsdemo from './jsdemo';\nimport Jsdemob from './jsdemob';\nimport Jsdemoc from './jsdemoc';\n\n\nclass TabBarExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'blueTab',\n            hidden: false,\n            fullScreen: true,\n        };\n    }\n\n    renderContent(pageText) {\n        if(pageText=='jsdemo'){\n            return  <Jsdemo/>\n        }else if(pageText=='jsdemob'){\n            return  <Jsdemob/>\n        }else if(pageText=='jsdemoc'){\n            return  <Jsdemoc/>\n        }\n        return (\n            <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\n                <div style={{ paddingTop: 60 }}>Clicked “{pageText}” tab， show “{pageText}” information</div>\n                <a style={{ display: 'block', marginTop: 40, marginBottom: 20, color: '#108ee9' }}\n                   onClick={(e) => {\n                       e.preventDefault();\n                       this.setState({\n                           hidden: !this.state.hidden,\n                       });\n                   }}\n                >\n                    Click to show/hide tab-bar\n                </a>\n                <a style={{ display: 'block', marginBottom: 600, color: '#108ee9' }}\n                   onClick={(e) => {\n                       e.preventDefault();\n                       this.setState({\n                           fullScreen: !this.state.fullScreen,\n                       });\n                   }}\n                >\n                    Click to switch fullscreen\n                </a>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? { position: 'fixed', height: '100%', width: '100%', top: 0 } : { height: 400 }}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"路由\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'blueTab'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'blueTab',\n                            });\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('jsdemo')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"jsdemob\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'redTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'redTab',\n                            });\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('jsdemob')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"jsdemoc\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'greenTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'greenTab',\n                            });\n                        }}\n                    >\n                        {this.renderContent('jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default TabBarExample\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router , Route} from 'react-router-dom';\n\n\nimport Jsdemo from './jsdemo';\nimport Jsdemob from './jsdemob';\nimport Jsdemoc from './jsdemoc';\nimport Nav from './nav';\nimport TabBarExample from \"./TabBarExample\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <TabBarExample/>\n        {/*<App />,*/}\n        {/*<Router>*/}\n            {/*<div>*/}\n                {/*<Nav/>*/}\n                {/*<Route exact path=\"/\" component={Jsdemo} />*/}\n                {/*<Route  path=\"/Jsdemob\" component={Jsdemob} />*/}\n                {/*<Route  path=\"/Jsdemoc\" component={Jsdemoc} />*/}\n            {/*</div>*/}\n        {/*</Router>*/}\n    </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}