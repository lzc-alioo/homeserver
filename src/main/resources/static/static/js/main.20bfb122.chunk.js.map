{"version":3,"sources":["component/machinelist/MachineList.js","component/timelist/TimeItem.js","component/timelist/TimeList.js","component/netlist/NetItem.js","component/netlist/NetList.js","component/onlinelist/OnLineItem.js","component/onlinelist/OnLineList.js","page/HomePage.js","page/OnLinePage.js","component/demo/jsdemoc.js","index.js"],"names":["Item","List","MachineList","props","state","list","downloadSpeed","upSpeed","console","log","this","getList","axios","get","server_path","then","res","setState","data","onlineMachineCount","forEach","item","index","array","parent","modifyOnlineMachineCount","tvState","name","modifyTvState","catch","err","obj","event","mac","act","checked","size","style","paddingLeft","map","i","key","full","background","Header","title","ip","extra","onChange","accessCtrl","bind","Body","Footer","content","downSpeed","React","Component","TimeItem","onChangeSwitch","thumb","width","overflow","float","mode","minuteStep","value","Date","startTime","time","onChangeTime","arrow","endTime","TimeList","type","timeString","formatTime","getTime","startTimeStr","endTimeStr","updateList","date","pad","n","timeStr","getHours","getMinutes","postData","url","method","JSON","stringify","mychecked","className","NetItem","nextProps","machineName","net","push","config","height","padding","xField","yField","point","shape","label","stroke","fill","NetList","modifyQueryParam","hourOffset","e","today","moment","format","startTimeTemp","subtract","substring","endTimeTemp","modifyQueryParam2","dayOffset","monitor_machine_array","getMachineList","elements","inline","marginRight","marginLeft","onClick","OnLineItem","OnLineList","history","createBrowserHistory","HomePage","result","msg","selectedTab","match","params","location","pathname","hidden","fullScreen","process","pageText","position","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","icon","selectedIcon","fontColor","selected","badge","onPress","data-seed","renderContent","dot","OnLinePage","ButtonExample","disabled","loading","src","alt","ReactDOM","render","path","exact","component","Jsdemoc","document","getElementById"],"mappings":"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","file":"static/js/main.20bfb122.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, List, Switch, WhiteSpace} from 'antd-mobile';\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\nclass MachineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            downloadSpeed: 0,\n            upSpeed: 0\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"MachineList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n\n    getList() {\n        axios.get(this.props.server_path + '/machine/getMachineList')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.list,\n                    downloadSpeed: res.data.downloadSpeed,\n                    upSpeed: res.data.upSpeed,\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n                let onlineMachineCount=0;\n                this.state.list.forEach((item,index,array)=>{\n                    if(item.state === \"on_line\"){\n                        onlineMachineCount++;\n                    }\n                });\n                this.props.parent.modifyOnlineMachineCount(this, onlineMachineCount)\n\n                let tvState=\"关\";\n                this.state.list.forEach((item,index,array)=>{\n                    if(item.name === \"X3-55\" && item.state === \"on_line\"){\n                        tvState=\"开\";\n                    }\n                });\n                this.props.parent.modifyTvState(this, tvState)\n\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    accessCtrl(obj, event) {\n\n        var mac = obj.mac;\n        var act = obj.checked ? \"on\" : \"off\";\n\n        //debugger\n        axios.get(this.props.server_path + '/machine/accessControl?mac=' + mac + '&act=' + act)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.list,\n                    downloadSpeed: res.data.downloadSpeed,\n                    upSpeed: res.data.upSpeed,\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <WhiteSpace size=\"lg\"/>\n                    <div style={{paddingLeft:15}} >\n                        下载速度：{this.state.downloadSpeed}kB/S 上传速度：{this.state.upSpeed}kB/S\n                    </div>\n                <WhiteSpace size=\"lg\"/>\n                <List  >\n\n                    {\n                        this.state.list.map((obj, i) => {\n                            //console.log(\"obj=\"+JSON.stringify(obj))\n\n                            return (\n                                <Item key={i}>\n\n                                    <Card full style={obj.state === \"off_online\" ? {background: \"#EAEAEA\"} : {background: \"#F0FFFF\"}}>\n                                        <Card.Header\n                                            title= {  obj.name + \" (\" + (obj.ip ? obj.ip : '--') + \") \" }\n                                            extra={<Switch\n                                                checked={obj.checked}\n                                                onChange={this.accessCtrl.bind(this, obj)}\n                                            />\n\n                                            }\n                                        />\n                                        <Card.Body>\n                                            <div> {obj.mac}  </div>\n                                        </Card.Body>\n                                        <Card.Footer content={\"实时下载速度：\" + obj.downSpeed} extra={<div> {\"实时上传速度：\" + obj.upSpeed} </div>}/>\n                                    </Card>\n\n                                </Item>)\n                        })\n                    }\n\n\n                </List>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default MachineList\n\n","import React from \"react\";\n\nimport {Card, Switch} from 'antd-mobile';\nimport {DatePicker, List} from 'antd-mobile';\n// import {Col, Row} from \"antd\";\n\nclass TimeItem extends React.Component {\n\n    render() {\n        return (\n            <List.Item key={this.props.i}>\n                <Card >\n                    <Card.Header\n                        extra={<Switch checked={this.props.obj.checked} onChange={checked => this.props.onChangeSwitch(this.props.obj, checked)}/> }\n                        title='禁用时间区间'\n                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                    >\n                    </Card.Header>\n                    <Card.Body>\n                        <div style={{width: \"100%\",overflow: \"hidden\" }}>\n                            <div style={{float:\"left\",width: \"50%\" }}>\n                                <DatePicker\n                                    mode=\"time\"\n                                    minuteStep={1}\n                                    // use12Hours\n                                    value={new Date(this.props.obj.startTime)}\n                                    onChange={time => this.props.onChangeTime(this.props.obj, this.props.i, 'startTimeStr', time)}\n                                >\n                                    <List.Item arrow=\"horizontal\">开始时间</List.Item>\n                                </DatePicker>\n                            </div>\n                            <div style={{float:\"right\",width: \"50%\" }}>\n                                <DatePicker\n                                    mode=\"time\"\n                                    minuteStep={1}\n                                    // use12Hours\n                                    value={new Date(this.props.obj.endTime)}\n                                    onChange={time => this.props.onChangeTime(this.props.obj, this.props.i, 'endTimeStr', time)}\n                                >\n                                    <List.Item arrow=\"horizontal\">结束时间</List.Item>\n                                </DatePicker>\n                            </div>\n                        </div>\n\n\n                        {/*<div>*/}\n                        {/*    <DatePicker*/}\n                        {/*        mode=\"time\"*/}\n                        {/*        minuteStep={1}*/}\n                        {/*        // use12Hours*/}\n                        {/*        value={new Date(this.props.obj.startTime)}*/}\n                        {/*        onChange={time => this.props.onChangeTime(this.props.obj, this.props.i, 'startTimeStr', time)}*/}\n                        {/*    >*/}\n                        {/*        <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>*/}\n                        {/*    </DatePicker>*/}\n\n                        {/*    <DatePicker*/}\n                        {/*        mode=\"time\"*/}\n                        {/*        minuteStep={1}*/}\n                        {/*        // use12Hours*/}\n                        {/*        value={new Date(this.props.obj.endTime)}*/}\n                        {/*        onChange={time => this.props.onChangeTime(this.props.obj, this.props.i, 'endTimeStr', time)}*/}\n                        {/*    >*/}\n                        {/*        <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>*/}\n                        {/*    </DatePicker>*/}\n                        {/*</div>*/}\n\n                    </Card.Body>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\n\nexport default TimeItem\n","import React from \"react\";\n\nimport {List} from 'antd-mobile';\nimport axios from \"axios\";\nimport TimeItem from \"./TimeItem\";\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\n\nclass TimeList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"UnavailableTimeList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(server_path + '/machine/getDisabledTimeList')\n            .then((res) => {\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    onChangeTime = (obj, i, type, time) => {\n        // debugger\n        const timeString = this.formatTime(time);\n        console.log(\"onChangeTime===\", i, time, timeString);\n\n        if (type === 'startTimeStr') {\n            obj.startTime = time.getTime();\n            obj.startTimeStr = timeString;\n        } else {\n            obj.endTime = time.getTime();\n            obj.endTimeStr = timeString;\n        }\n\n        console.log(\"this.state.list===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateList();\n    }\n\n    onChangeSwitch = (obj, checked) => {\n        // debugger\n        obj.checked=checked;\n        console.log(\"this.state.list===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateList();\n    }\n\n\n    formatTime = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    updateList = () => {\n\n        // let postData = {list:this.state.list};\n        let postData = this.state.list;\n\n        axios({\n            url: this.props.server_path + '/machine/updateDisabledTimeList',\n            method: 'post',\n            data: postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res) => {\n            // 注意this指向\n            this.setState({\n                list: res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data));\n            //debugger\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (<form>\n            <List className=\"date-picker-list\">\n                {\n                    this.state.list.map((obj, i) => {\n                        console.log(\"timelist i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                        //debugger\n                        return (<TimeItem key={i} obj={obj} onChangeTime={this.onChangeTime}  onChangeSwitch={this.onChangeSwitch} />)\n                    })\n                }\n\n            </List>\n\n            {/*<span className=\"iconfont icon-tubiao-zhexiantu\"> </span>*/}\n\n        </form>);\n    }\n}\n\n\nexport default TimeList\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './NetItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass NetItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartItem componentDidMount 进来了。。。\")\n        this.getList(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"NetChartItem componentWillReceiveProps \", nextProps)\n\n        this.getList(nextProps);\n    }\n\n\n    getList(props) {\n        let startTime = props.startTime;\n        let endTime = props.endTime;\n        let machineName = props.machineName;\n\n        axios.get(server_path + '/machine//getNetList?startTime=' + startTime + '&endTime=' + endTime + '&machineName=' + machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default NetItem;\n","import React from 'react';\nimport NetItem from \"./NetItem\";\nimport {Button, List, WhiteSpace} from 'antd-mobile';\nimport './NetList.css'\n\nimport moment from 'moment'\nimport axios from \"axios\";\n\n// const monitor_machine_array = process.env.REACT_APP_monitor_machine.split(\",\");\n\nclass NetList extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startTime: \"\",\n            endTime: \"\",\n            monitor_machine_array: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetList componentDidMount 进来了。。。\")\n        this.getMachineList();\n    }\n\n    getMachineList() {\n        const monitor_machine_array = [];\n        axios.get(this.props.server_path + '/machine/getMonitorMachineList')\n            .then((res) => {\n                res.data.forEach((item, index, array) => {\n                    monitor_machine_array.push(item.name);\n                });\n                return monitor_machine_array;\n\n            })\n            .then((monitor_machine_array) => {\n                this.setState({\n                    monitor_machine_array: monitor_machine_array\n                })\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    modifyQueryParam = (hourOffset, e) => {\n        let today = moment().format(\"YYYYMMDD\");\n        let startTimeTemp = moment().subtract(hourOffset, \"hours\").format(\"YYYYMMDDHHmm\");\n        if (startTimeTemp.substring(0, 8) !== today) {\n            startTimeTemp = today + \"0000\";\n        }\n        let endTimeTemp = moment().format(\"YYYYMMDDHHmm\");\n\n        console.log(\"startTimeTemp:\" + startTimeTemp, \"endTimeTemp:\" + endTimeTemp)\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n    modifyQueryParam2 = (dayOffset, e) => {\n        let startTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"0000\";\n        let endTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"2359\";\n\n        console.log(\"startTimeTemp:\" + startTimeTemp, \"endTimeTemp:\" + endTimeTemp)\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n\n    render() {\n\n        const elements = [];\n        this.state.monitor_machine_array.forEach((item) => {\n            elements.push(\n                <NetItem server_path={this.props.server_path} startTime={this.state.startTime} endTime={this.state.endTime} machineName={item} key={item}/>\n            )\n        })\n\n        return (\n            <div>\n                <div>\n                    <WhiteSpace/>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px', marginLeft: '4px'}} onClick={this.modifyQueryParam.bind(this, 1)}>最近1小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 3)}>最近3小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 6)}>最近6小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 12)}>最近12小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 24)}>今天</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam2.bind(this, 1)}>昨天</Button>\n                    <WhiteSpace/>\n\n                </div>\n\n                <List>\n                    {elements}\n                </List>\n\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default NetList\n\n\n\n\n\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './OnLineItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass OnLineItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"OnLineItem componentDidMount 进来了。。。machineName:\" + this.props.machineName + \" startTime:\" + this.props.startTime);\n        this.getList(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // debugger\n        console.log(\"OnLineItem componentWillReceiveProps 进来了。。。machineName:\" + nextProps.machineName + \" startTime:\" + nextProps.startTime);\n        this.getList(nextProps);\n\n    }\n\n\n    getList(props) {\n        axios.get(server_path + '/machine//getOnlineList?startTime=' + props.startTime + '&endTime=' + props.endTime + '&machineName=' + props.machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default OnLineItem;\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {Button, List, WhiteSpace} from 'antd-mobile';\n\nimport moment from 'moment'\nimport axios from \"axios\";\n\n\nclass OnLineList extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startTime: \"\",\n            endTime: \"\",\n            monitor_machine_array: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"OnLineList componentDidMount 进来了。。。\")\n        this.getMachineList();\n    }\n\n    getMachineList() {\n        const monitor_machine_array = [];\n        axios.get(this.props.server_path + '/machine/getMonitorMachineList')\n            .then((res) => {\n                res.data.forEach((item, index, array) => {\n                    monitor_machine_array.push(item.name);\n                });\n                return monitor_machine_array;\n\n            })\n            .then((monitor_machine_array) => {\n                this.setState({\n                    monitor_machine_array: monitor_machine_array\n                })\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    modifyQueryParam = (hourOffset, e) => {\n        let today = moment().format(\"YYYYMMDD\");\n        let startTimeTemp = moment().subtract(hourOffset, \"hours\").format(\"YYYYMMDDHHmm\");\n        if (startTimeTemp.substring(0, 8) !== today) {\n            startTimeTemp = today + \"0000\";\n        }\n        let endTimeTemp = moment().format(\"YYYYMMDDHHmm\");\n\n        console.log(\"startTimeTemp:\" + startTimeTemp, \"endTimeTemp:\" + endTimeTemp)\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n    modifyQueryParam2 = (dayOffset, e) => {\n        let startTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"0000\";\n        let endTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"2359\";\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n\n    render() {\n        const elements = [];\n        this.state.monitor_machine_array.forEach((item) => {\n            elements.push(\n                <OnLineItem server_path={this.props.server_path} startTime={this.state.startTime} endTime={this.state.endTime} machineName={item} key={item}/>\n            )\n        })\n\n\n        return (\n            <div>\n                <div>\n                    <WhiteSpace/>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px', marginLeft: '4px'}} onClick={this.modifyQueryParam.bind(this, 1)}>最近1小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 3)}>最近3小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 6)}>最近6小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 12)}>最近12小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 24)}>今天</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam2.bind(this, 1)}>昨天</Button>\n                    <WhiteSpace/>\n\n                </div>\n\n                <List>\n                    {elements}\n                </List>\n\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default OnLineList\n\n\n\n\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\nimport './HomePage.css'\n\n\nimport MachineList from '../component/machinelist/MachineList';\nimport TimeList from '../component/timelist/TimeList';\nimport NetList from '../component/netlist/NetList';\nimport OnLineList from '../component/onlinelist/OnLineList';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        // debugger\n        var selectedTab = \"machine-list\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.HomePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.HomePage this.props.match =\", this.props.match)\n            console.log(\"5.HomePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n            onlineMachineCount: 0,\n            tvState: \"\",\n        };\n\n        console.log(\"2.HomePage REACT_APP_SERVER_PATH=\", process.env.REACT_APP_SERVER_PATH, process.env.NODE_ENV)\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境')\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境')\n        }\n\n    }\n\n    modifyOnlineMachineCount = (result, msg) => {\n        // console.log(result, msg)\n        this.setState({\n            onlineMachineCount: msg\n        })\n    }\n    modifyTvState = (result, msg) => {\n        // console.log(result, msg)\n        this.setState({\n            tvState: msg\n        })\n    }\n\n\n    renderContent(pageText) {\n        if (pageText === 'machine-list') {\n            return <MachineList server_path={server_path} parent={ this } />\n        } else if (pageText === 'time-list') {\n            return <TimeList server_path={server_path} {...this.props} />\n            // } else if (pageText === 'net-chart-item') {\n            //     return <NetChartItem server_path={server_path} machineName='X3-55'/>\n        } else if (pageText === 'net-chart-list') {\n            return <NetList server_path={server_path}/>\n        } else if (pageText === 'online-list') {\n            return <OnLineList server_path={server_path}/>\n        }\n\n    }\n\n\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"设备开关\"\n                        key=\"Life\"\n                        icon={  <span className=\"iconfont icon-shebeiguanli\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-shebeiguanli\" style={{fontColor:'blue'}}> </span>  }\n                        selected={this.state.selectedTab === 'machine-list'}\n                        badge={this.state.onlineMachineCount}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'machine-list',\n                            });\n                            history.push('/home/machine-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('machine-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={  <span className=\"iconfont icon-dingshi\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-dingshi\" style={{fontColor:'blue'}}> </span>  }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={this.state.tvState}\n                        selected={this.state.selectedTab === 'time-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'time-list',\n                            });\n                            history.push('/home/time-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('time-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={  <span className=\"iconfont icon-tubiao-zhexiantu\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-tubiao-zhexiantu\" style={{fontColor:'blue'}}> </span>  }\n                        title=\"流量报表\"\n                        key=\"Koubei\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'net-chart-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'net-chart-list',\n                            });\n                            history.push('/home/net-chart-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('net-chart-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"Test\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'online-list',\n                            });\n                            history.push('/home/online-list');\n\n                        }}\n                    >\n                        {this.renderContent('online-list')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default HomePage\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\n\nimport './OnLinePage.css'\n\n\nimport OnLineList from '../component/onlinelist/OnLineList';\nimport Least3HoursOnLineList from '../component/onlinelist/OnLineList';\nimport Least1HoursOnLineList from '../component/onlinelist/OnLineList';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nclass OnLinePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // debugger\n        var selectedTab = \"online-list\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"1.OnLinePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"2.OnLinePage this.props.match =\", this.props.match)\n            console.log(\"3.OnLinePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n        };\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        }\n\n    }\n\n    renderContent(pageText) {\n        if (pageText === 'online-list') {\n            return <OnLineList/>\n        } else if (pageText === 'least3-online-list') {\n            return <Least3HoursOnLineList/>\n        } else if (pageText === 'least1-online-list') {\n            return <Least1HoursOnLineList/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"联网时间\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'online-list'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'online-list',\n                            });\n                            history.push('online-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近3小时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'least3-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least3-online-list',\n                            });\n                            history.push('least3-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least3-online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近1小时\"\n                        key=\"Koubei2\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'least1-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least1-online-list',\n                            });\n                            history.push('least1-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least1-online-list')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default OnLinePage\n\n","import React from 'react';\nimport {Button, WhiteSpace, WingBlank} from 'antd-mobile';\n\n\nclass ButtonExample extends React.Component {\n    constructor(props) {\n        super(props);\n        var selectedTab = \"\";\n\n        // debugger\n        if (this.props.match && this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.ButtonExample this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.ButtonExample this.props.match =\", this.props.match)\n            console.log(\"5.ButtonExample selectedTab =\", selectedTab)\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Jsdemoc componentDidMount 进来了。。。\")\n        debugger\n    }\n\n\n    render() {\n        return (\n            <WingBlank>\n\n                <Button>default</Button><WhiteSpace/>\n                <Button disabled>default disabled</Button><WhiteSpace/>\n\n                <Button type=\"primary\">primary</Button><WhiteSpace/>\n                <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace/>\n\n                <Button type=\"warning\">warning</Button><WhiteSpace/>\n                <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace/>\n\n                <Button loading>loading button</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace/>\n                <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\"/>}>with custom icon</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\" inline size=\"small\" style={{marginRight: '4px'}}>with icon and inline</Button>\n                <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n                <WhiteSpace/>\n\n                {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n                {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline style={{marginRight: '4px'}}>inline primary</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline style={{marginRight: '4px'}} className=\"am-button-borderfix\">inline ghost</Button>\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline size=\"small\" style={{marginRight: '4px'}}>primary</Button>\n                <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n                <WhiteSpace/>\n                <Button type=\"ghost\" inline size=\"small\" style={{marginRight: '4px'}}>ghost</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n            </WingBlank>\n        )\n    }\n\n}\n\nexport default ButtonExample\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd-mobile/dist/antd-mobile.css';\n// import 'antd/dist/antd.css';\nimport './index.css';\n// import { GlobalStyleIcon } from './iconfont/iconfont.css'\nimport  './iconfont/iconfont.css'\n\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport HomePage from \"./page/HomePage\";\nimport OnLinePage from \"./page/OnLinePage\";\nimport Jsdemoc from \"./component/demo/jsdemoc\";\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <Route path='/' exact component={HomePage}></Route>\n        <Route path='/home/:selectedTab' exact component={HomePage}></Route>\n        <Route path='/online/:selectedTab' exact component={OnLinePage}></Route>\n        <Route path='/detai/:id' exact component={Jsdemoc}></Route>\n    </BrowserRouter>,\n\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}