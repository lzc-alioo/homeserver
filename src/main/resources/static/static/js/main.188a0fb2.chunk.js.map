{"version":3,"sources":["serviceWorker.js","component/MachineList.js","component/timelist/TimeItem.js","component/timelist/TimeList.js","component/chart/NetChartItem.js","component/chart/NetChartList.js","jsdemoc.js","TabBarExample.js","index.js"],"names":["Boolean","window","location","hostname","match","Item","List","MachineList","props","state","list","mychecked","console","log","this","getList","axios","get","server_path","then","res","setState","data","terminals","catch","err","obj","event","mac","act","flag","substring","size","map","i","key","full","Header","title","name","ip","thumb","extra","checked","onChange","accessCtrl","bind","Body","Footer","content","speed","upSpeed","React","Component","TimeItem","mode","minuteStep","value","Date","startTime","time","arrow","endTime","TimeList","onChangeTime","type","timeString","formatTime","getTime","startTimeStr","endTimeStr","updateList","date","pad","n","timeStr","getHours","getMinutes","postData","url","method","JSON","stringify","className","NetChartItem","machineName","item","net","push","config","height","xField","yField","point","shape","NetChartList","ButtonExample","disabled","loading","icon","src","alt","inline","style","marginRight","ReactDOM","render","document","getElementById","process","TabBarExample","selectedTab","hidden","fullScreen","pageText","position","width","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","background","selectedIcon","selected","badge","onPress","data-seed","renderContent","dot","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.188a0fb2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Card, List, Switch, WhiteSpace} from 'antd-mobile';\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\nclass MachineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"MachineList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(this.props.server_path + '/statistic/getList')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.terminals\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    accessCtrl(obj, event) {\n\n        var mac = obj.mac;\n        var mychecked = ('F' === obj.flag.substring(2, 3)) ? true : false;\n        var act = mychecked ? \"on\" : \"off\";\n\n        //debugger\n        axios.get(this.props.server_path  + '/statistic/accessCtrl?mac=' + mac + '&act=' + act)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.terminals\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <WhiteSpace size=\"lg\"/>\n                <List\n                >\n\n                    {\n                        this.state.list.map((obj,i) => {\n                            //console.log(\"obj=\"+JSON.stringify(obj))\n\n                            //TTFFFFTFFTFF ali15可上网   ；TTTFFFTFFTFF 不可上网\n                            //FTFFFFTFFTFF ali11可上网   ；FFTFFFTFFTFF 不可上网\n                            //FTFFFFFFFTFF x55  可上网   ；FTTFFFFFFTFF 不可上网\n                            //FFFFFFTFFTFF 离线设备可上网 ；FFTFFFTFFTFF 不可上网\n                            //var mychecked = ('FTFFFFTFFTFF' == obj.flag || 'FTFFFFFFFTFF' == obj.flag || 'FFFFFFTFFTFF' == obj.flag || 'TTFFFFTFFTFF' == obj.flag) ? true : false;\n\n                            //第3位是F 可以上网，第3位是T不可上网\n                            var mychecked = ('F' === obj.flag.substring(2, 3)) ? true : false;\n\n                            // console.log(\"terminallist i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                            //debugger\n                            return (\n                                <Item key={i}>\n\n                                    <Card full>\n                                        <Card.Header\n                                            title={obj.name + \" ( \" + (obj.ip ? obj.ip:'--') + \")\"}\n                                            thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                                            extra={<Switch\n                                                checked={mychecked}\n                                                onChange={this.accessCtrl.bind(this, obj)}\n                                            />\n\n                                            }\n                                        />\n                                        <Card.Body>\n                                            <div>{obj.mac} </div>\n                                        </Card.Body>\n                                        <Card.Footer content={\"实时下载速度：\" + obj.speed} extra={<div> {\"实时上传速度：\" + obj.upSpeed} </div>}/>\n                                    </Card>\n\n                                </Item>)\n                        })\n                    }\n\n\n                </List>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default MachineList\n\n","import React from \"react\";\n\nimport {Card, DatePicker, List} from 'antd-mobile';\n\nclass TimeItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(\"props=\" + props)\n        //debugger\n    }\n\n    render() {\n        return (\n            <List.Item key={this.props.i}>\n                <Card full>\n                    <Card.Header\n                        title='禁用时间区间'\n                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n\n                    />\n                    <Card.Body>\n                        <div>\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.startTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'startTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>\n                            </DatePicker>\n\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.endTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'endTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>\n                            </DatePicker>\n                        </div>\n\n                    </Card.Body>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\n\nexport default TimeItem\n","import React from \"react\";\n\nimport {List} from 'antd-mobile';\nimport axios from \"axios\";\nimport TimeItem from \"./TimeItem\";\n\nclass TimeList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"TimeList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(this.props.server_path + '/statistic/getUnavailableTimeList')\n            .then((res) => {\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    onChangeTime = (obj, i, type, time) => {\n        // debugger\n        const timeString = this.formatTime(time);\n        console.log(\"onChangeTime===\", i, time, timeString);\n\n        if (type === 'startTimeStr') {\n            obj.startTime = time.getTime();\n            obj.startTimeStr = timeString;\n        } else {\n            obj.endTime = time.getTime();\n            obj.endTimeStr = timeString;\n        }\n\n        console.log(\"this.state.list===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateList();\n    }\n\n\n    formatTime = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    updateList = () => {\n\n        // let postData = {list:this.state.list};\n        let postData = this.state.list;\n\n        axios({\n            url: this.props.server_path + '/statistic/updateUnavailableTimeList',\n            method: 'post',\n            data: postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res) => {\n            // 注意this指向\n            this.setState({\n                list: res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data));\n            //debugger\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (<form>\n            <List className=\"date-picker-list\">\n                {\n                    this.state.list.map((obj, i) => {\n                        console.log(\"timelist i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                        //debugger\n                        return (<TimeItem key={i} obj={obj} onChange={this.onChangeTime}/>)\n                    })\n                }\n\n            </List>\n        </form>);\n    }\n}\n\n\nexport default TimeList\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\n\n\nclass NetChartItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"ChartItem componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(this.props.server_path + '/statistic/netWorkData?datestr=&machineName=' + this.props.machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n        };\n\n        return <Line {...config} />;\n\n    }\n}\n\nexport default NetChartItem;\n","import React from 'react';\nimport NetChartItem from \"./NetChartItem\";\nimport {List} from 'antd-mobile';\n\n\nclass NetChartList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: []\n        }\n    }\n\n\n    render() {\n        return (\n            <List>\n                <NetChartItem server_path={this.props.server_path} machineName='X3-55'/>\n                <NetChartItem server_path={this.props.server_path} machineName='CM201-2'/>\n                <NetChartItem server_path={this.props.server_path} machineName='ali6s'/>\n                <NetChartItem server_path={this.props.server_path} machineName='alioo15'/>\n                <NetChartItem server_path={this.props.server_path} machineName='hlnew50'/>\n\n            </List>\n        );\n    }\n\n}\n\n\nexport default NetChartList\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route} from 'react-router-dom';\nimport {Button, WhiteSpace, WingBlank} from 'antd-mobile';\n\nconst ButtonExample = () => (\n    <WingBlank>\n        <Button>default</Button><WhiteSpace />\n        <Button disabled>default disabled</Button><WhiteSpace />\n\n        <Button type=\"primary\">primary</Button><WhiteSpace />\n        <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace />\n\n        <Button type=\"warning\">warning</Button><WhiteSpace />\n        <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace />\n\n        <Button loading>loading button</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace />\n        <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\" />}>with custom icon</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\" inline size=\"small\" style={{ marginRight: '4px' }}>with icon and inline</Button>\n        <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n        <WhiteSpace />\n\n        {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n        {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline style={{ marginRight: '4px' }}>inline primary</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline style={{ marginRight: '4px' }} className=\"am-button-borderfix\">inline ghost</Button>\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }}>primary</Button>\n        <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n        <WhiteSpace />\n        <Button type=\"ghost\" inline size=\"small\" style={{ marginRight: '4px' }}>ghost</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n    </WingBlank>\n);\nReactDOM.render(<ButtonExample />,  document.getElementById('root'));\nexport default ButtonExample\n\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\nimport './TabBarExample.css'\n\n\nimport MachineList from './component/MachineList';\nimport TimeList from './component/timelist/TimeList';\nimport NetChartItem from './component/chart/NetChartItem';\nimport NetChartList from './component/chart/NetChartList';\nimport Jsdemoc from './jsdemoc';\n\n// const server_path = 'http://192.168.16.198:8081';\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass TabBarExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'blueTab',\n            hidden: false,\n            fullScreen: true,\n        };\n\n        console.log(\"1.REACT_APP_BASE_URL=\", process.env.REACT_APP_BASE_URL, process.env.NODE_ENV)\n        console.log(\"2.REACT_APP_SERVER_PATH=\", process.env.REACT_APP_SERVER_PATH, process.env.NODE_ENV)\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境')\n            // debugger\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境')\n        }\n\n    }\n\n\n    renderContent(pageText) {\n        if (pageText === 'machine-list') {\n            return <MachineList server_path={server_path}/>\n        } else if (pageText === 'time-list') {\n            return <TimeList server_path={server_path}/>\n        // } else if (pageText === 'net-chart-item') {\n        //     return <NetChartItem server_path={server_path} machineName='X3-55'/>\n        } else if (pageText === 'net-chart-list') {\n            return <NetChartList server_path={server_path}/>\n        } else if (pageText === 'jsdemoc') {\n            return <Jsdemoc/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"路由开关\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'blueTab'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'blueTab',\n                            });\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('machine-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'redTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'redTab',\n                            });\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('time-list')}\n                    </TabBar.Item>\n                    {/*<TabBar.Item*/}\n                        {/*icon={*/}\n                            {/*<div style={{*/}\n                                {/*width: '22px',*/}\n                                {/*height: '22px',*/}\n                                {/*background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'*/}\n                            {/*}}*/}\n                            {/*/>*/}\n                        {/*}*/}\n                        {/*selectedIcon={*/}\n                            {/*<div style={{*/}\n                                {/*width: '22px',*/}\n                                {/*height: '22px',*/}\n                                {/*background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'*/}\n                            {/*}}*/}\n                            {/*/>*/}\n                        {/*}*/}\n                        {/*title=\"图表\"*/}\n                        {/*key=\"Koubei\"*/}\n                        {/*badge={'new'}*/}\n                        {/*selected={this.state.selectedTab === 'blackTab'}*/}\n                        {/*onPress={() => {*/}\n                            {/*this.setState({*/}\n                                {/*selectedTab: 'blackTab',*/}\n                            {/*});*/}\n                        {/*}}*/}\n                        {/*data-seed=\"logId1\"*/}\n                    {/*>*/}\n                        {/*{this.renderContent('net-chart-item')}*/}\n                    {/*</TabBar.Item>*/}\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"图表测试\"\n                        key=\"Koubei\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'yellowTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'yellowTab',\n                            });\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('net-chart-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"待启用\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'greenTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'greenTab',\n                            });\n                        }}\n                    >\n                        {this.renderContent('jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default TabBarExample\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\n\n\nimport TabBarExample from \"./TabBarExample\";\n\nReactDOM.render(\n    <div>\n        <TabBarExample/>\n    </div>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}