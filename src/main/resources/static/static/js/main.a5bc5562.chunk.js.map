{"version":3,"sources":["component/machinelist/MachineList.js","component/timelist/TimeItem.js","component/timelist/TimeList.js","component/netlist/NetItem.js","component/netlist/NetList.js","component/demo/jsdemoc.js","page/HomePage.js","component/online/OnLineItem.js","component/online/OnLineList.js","component/online/Least3HoursOnLineList.js","component/online/Least1HoursOnLineList.js","page/OnLinePage.js","component/online/OnLinePageTest.js","index.js"],"names":["Item","List","MachineList","props","state","list","mychecked","console","log","this","getList","axios","get","server_path","then","res","setState","data","onlineMachineCount","forEach","item","index","array","parent","modifyOnlineMachineCount","tvState","name","modifyTvState","catch","err","obj","event","mac","act","checked","size","map","i","key","full","style","background","Header","title","ip","extra","onChange","accessCtrl","bind","Body","Footer","content","downSpeed","upSpeed","React","Component","TimeItem","thumb","mode","minuteStep","value","Date","startTime","time","arrow","endTime","TimeList","onChangeTime","type","timeString","formatTime","getTime","startTimeStr","endTimeStr","updateList","date","pad","n","timeStr","getHours","getMinutes","postData","url","method","JSON","stringify","className","NetItem","nextProps","machineName","net","push","config","height","padding","xField","yField","point","shape","label","stroke","fill","monitor_machine_array","process","split","NetList","modifyQueryParam","hourOffset","e","today","moment","format","startTimeTemp","subtract","substring","endTimeTemp","modifyQueryParam2","dayOffset","elements","inline","marginRight","marginLeft","onClick","ButtonExample","selectedTab","match","params","location","pathname","disabled","loading","icon","src","alt","history","createBrowserHistory","HomePage","result","msg","hidden","fullScreen","pageText","position","width","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","selectedIcon","fontColor","selected","badge","onPress","data-seed","renderContent","dot","OnLineItem","subUrl","OnLineList","getYYYYMMDDHHmm","visible1","visible2","wrap","prevState","visible","defaultValue","precision","onClose","onConfirm","val","val2","Least3HoursOnLineList","Least1HoursOnLineList","OnLinePage","Precision","useState","setVisible1","setVisible2","Toast","show","toString","ReactDOM","render","path","exact","component","Jsdemoc","document","getElementById"],"mappings":"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","file":"static/js/main.a5bc5562.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, List, Switch, WhiteSpace} from 'antd-mobile';\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\nclass MachineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"MachineList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n\n    getList() {\n        axios.get(this.props.server_path + '/statistic/getMachineList2')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    // list: res.data.terminals\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n                let onlineMachineCount=0;\n                this.state.list.forEach((item,index,array)=>{\n                    if(item.state === \"on_line\"){\n                        onlineMachineCount++;\n                    }\n                });\n                this.props.parent.modifyOnlineMachineCount(this, onlineMachineCount)\n\n                let tvState=\"关\";\n                this.state.list.forEach((item,index,array)=>{\n                    if(item.name === \"X3-55\" && item.state === \"on_line\"){\n                        tvState=\"开\";\n                    }\n                });\n                this.props.parent.modifyTvState(this, tvState)\n\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    accessCtrl(obj, event) {\n\n        var mac = obj.mac;\n        var act = obj.checked ? \"on\" : \"off\";\n\n        //debugger\n        axios.get(this.props.server_path + '/statistic/setNetWorkSwitch?mac=' + mac + '&act=' + act)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    // list: res.data.terminals\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <WhiteSpace size=\"lg\"/>\n                <List  >\n\n\n                    {\n                        this.state.list.map((obj, i) => {\n                            //console.log(\"obj=\"+JSON.stringify(obj))\n\n                            var mychecked = obj.checked;\n\n                            //debugger\n                            // let myIcon=\"<span className='iconfont icon-tubiao-zhexiantu'> </span>\"\n\n                            return (\n                                <Item key={i}>\n\n                                    <Card full style={obj.state === \"off_online\" ? {background: \"#EAEAEA\"} : {background: \"#F0FFFF\"}}>\n                                        <Card.Header\n                                            title= {  obj.name + \" (\" + (obj.ip ? obj.ip : '--') + \") \" }\n                                            extra={<Switch\n                                                checked={mychecked}\n                                                onChange={this.accessCtrl.bind(this, obj)}\n                                            />\n\n                                            }\n                                        />\n                                        <Card.Body>\n                                            <div> {obj.mac}  </div>\n                                        </Card.Body>\n                                        <Card.Footer content={\"实时下载速度：\" + obj.downSpeed} extra={<div> {\"实时上传速度：\" + obj.upSpeed} </div>}/>\n                                    </Card>\n\n                                </Item>)\n                        })\n                    }\n\n\n                </List>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default MachineList\n\n","import React from \"react\";\n\nimport {Card, DatePicker, List} from 'antd-mobile';\n\nclass TimeItem extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     //debugger\n    // }\n\n    render() {\n        return (\n            <List.Item key={this.props.i}>\n                <Card full>\n                    <Card.Header\n                        title='禁用时间区间'\n                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n\n                    />\n                    <Card.Body>\n                        <div>\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.startTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'startTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>\n                            </DatePicker>\n\n                            <DatePicker\n                                mode=\"time\"\n                                minuteStep={1}\n                                // use12Hours\n                                value={new Date(this.props.obj.endTime)}\n                                onChange={time => this.props.onChange(this.props.obj, this.props.i, 'endTimeStr', time)}\n                            >\n                                <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>\n                            </DatePicker>\n                        </div>\n\n                    </Card.Body>\n                </Card>\n            </List.Item>\n        )\n    }\n}\n\n\nexport default TimeItem\n","import React from \"react\";\n\nimport {List} from 'antd-mobile';\nimport axios from \"axios\";\nimport TimeItem from \"./TimeItem\";\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\n\nclass TimeList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"UnavailableTimeList componentDidMount 进来了。。。\")\n        this.getList();\n    }\n\n    getList() {\n        axios.get(server_path + '/statistic/getUnavailableTimeList')\n            .then((res) => {\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    onChangeTime = (obj, i, type, time) => {\n        // debugger\n        const timeString = this.formatTime(time);\n        console.log(\"onChangeTime===\", i, time, timeString);\n\n        if (type === 'startTimeStr') {\n            obj.startTime = time.getTime();\n            obj.startTimeStr = timeString;\n        } else {\n            obj.endTime = time.getTime();\n            obj.endTimeStr = timeString;\n        }\n\n        console.log(\"this.state.list===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateList();\n    }\n\n\n    formatTime = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    updateList = () => {\n\n        // let postData = {list:this.state.list};\n        let postData = this.state.list;\n\n        axios({\n            url: this.props.server_path + '/statistic/updateUnavailableTimeList',\n            method: 'post',\n            data: postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res) => {\n            // 注意this指向\n            this.setState({\n                list: res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data));\n            //debugger\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (<form>\n            <List className=\"date-picker-list\">\n                {\n                    this.state.list.map((obj, i) => {\n                        console.log(\"timelist i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                        //debugger\n                        return (<TimeItem key={i} obj={obj} onChange={this.onChangeTime}/>)\n                    })\n                }\n\n            </List>\n\n            <span className=\"iconfont icon-tubiao-zhexiantu\"> </span>\n\n        </form>);\n    }\n}\n\n\nexport default TimeList\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './NetItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass NetItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            // startTime: this.props.startTime,\n            // endTime: this.props.endTime,\n            // machineName: this.props.machineName\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartItem componentDidMount 进来了。。。\")\n        this.getList(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"NetChartItem componentWillReceiveProps \", nextProps)\n\n        // this.setState({\n        //     startTime: nextProps.startTime,\n        //     endTime: nextProps.endTime,\n        //     machineName: nextProps.machineName\n        // });\n\n        this.getList(nextProps);\n    }\n\n\n    getList(props) {\n        let startTime = props.startTime;\n        let endTime = props.endTime;\n        let machineName = props.machineName;\n\n        axios.get(server_path + '/statistic/getNetWorkData?startTime=' + startTime + '&endTime=' + endTime + '&machineName=' + machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default NetItem;\n","import React from 'react';\nimport NetItem from \"./NetItem\";\nimport {Button, List, WhiteSpace} from 'antd-mobile';\nimport './NetList.css'\n\nimport moment from 'moment'\n\nconst monitor_machine_array = process.env.REACT_APP_monitor_machine.split(\",\");\n\nclass NetList extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startTime: \"\",\n            endTime: \"\"\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartList componentDidMount 进来了。。。\")\n    }\n\n    modifyQueryParam = (hourOffset, e) => {\n        let today = moment().format(\"YYYYMMDD\");\n        let startTimeTemp = moment().subtract(hourOffset, \"hours\").format(\"YYYYMMDDHHmm\");\n        if (startTimeTemp.substring(0, 8) !== today) {\n            startTimeTemp = today + \"0000\";\n        }\n        let endTimeTemp = moment().format(\"YYYYMMDDHHmm\");\n\n        console.log(\"startTimeTemp:\" + startTimeTemp, \"endTimeTemp:\" + endTimeTemp)\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n    modifyQueryParam2 = (dayOffset, e) => {\n        let startTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"0000\";\n        let endTimeTemp = moment().subtract(1, \"days\").format(\"YYYYMMDD\") + \"2359\";\n\n        console.log(\"startTimeTemp:\" + startTimeTemp, \"endTimeTemp:\" + endTimeTemp)\n\n        this.setState({\n            startTime: startTimeTemp,\n            endTime: endTimeTemp\n        })\n    }\n\n\n    render() {\n        const elements=[];\n        monitor_machine_array.forEach((item)=>{\n            elements.push(\n                <NetItem server_path={this.props.server_path} startTime={this.state.startTime} endTime={this.state.endTime} machineName={item} key={item} />\n            )\n        })\n\n\n\n        return (\n            <div>\n                <div>\n                    <WhiteSpace/>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px',marginLeft: '4px'}} onClick={this.modifyQueryParam.bind(this, 1)}>最近1小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 3)}>最近3小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 6)}>最近6小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 12)}>最近12小时</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam.bind(this, 24)}>今天</Button>\n                    <Button type=\"primary\" className=\"quickBtn\" inline size=\"small\" style={{marginRight: '4px'}} onClick={this.modifyQueryParam2.bind(this, 1)}>昨天</Button>\n                    <WhiteSpace/>\n\n                </div>\n\n                <List>\n                    {elements}\n                </List>\n\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default NetList\n\n\n\n\n\n","import React from 'react';\nimport {Button, WhiteSpace, WingBlank} from 'antd-mobile';\n\n\nclass ButtonExample extends React.Component {\n    constructor(props) {\n        super(props);\n        var selectedTab = \"\";\n\n        // debugger\n        if (this.props.match && this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.ButtonExample this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.ButtonExample this.props.match =\", this.props.match)\n            console.log(\"5.ButtonExample selectedTab =\", selectedTab)\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Jsdemoc componentDidMount 进来了。。。\")\n        debugger\n    }\n\n\n    render() {\n        return (\n            <WingBlank>\n\n                <Button>default</Button><WhiteSpace/>\n                <Button disabled>default disabled</Button><WhiteSpace/>\n\n                <Button type=\"primary\">primary</Button><WhiteSpace/>\n                <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace/>\n\n                <Button type=\"warning\">warning</Button><WhiteSpace/>\n                <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace/>\n\n                <Button loading>loading button</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace/>\n                <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\"/>}>with custom icon</Button><WhiteSpace/>\n                <Button icon=\"check-circle-o\" inline size=\"small\" style={{marginRight: '4px'}}>with icon and inline</Button>\n                <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n                <WhiteSpace/>\n\n                {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n                {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline style={{marginRight: '4px'}}>inline primary</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline style={{marginRight: '4px'}} className=\"am-button-borderfix\">inline ghost</Button>\n\n                <WhiteSpace/>\n                <Button type=\"primary\" inline size=\"small\" style={{marginRight: '4px'}}>primary</Button>\n                <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n                <WhiteSpace/>\n                <Button type=\"ghost\" inline size=\"small\" style={{marginRight: '4px'}}>ghost</Button>\n                {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n                <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n            </WingBlank>\n        )\n    }\n\n}\n\nexport default ButtonExample\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\nimport './HomePage.css'\n\n\nimport MachineList from '../component/machinelist/MachineList';\nimport TimeList from '../component/timelist/TimeList';\nimport NetList from '../component/netlist/NetList';\nimport Jsdemoc from '../component/demo/jsdemoc';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        // debugger\n        var selectedTab = \"\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"3.HomePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"4.HomePage this.props.match =\", this.props.match)\n            console.log(\"5.HomePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n            onlineMachineCount: 0,\n            tvState: \"\",\n        };\n\n        console.log(\"2.HomePage REACT_APP_SERVER_PATH=\", process.env.REACT_APP_SERVER_PATH, process.env.NODE_ENV)\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境')\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境')\n        }\n\n    }\n\n    modifyOnlineMachineCount = (result, msg) => {\n        // console.log(result, msg)\n        this.setState({\n            onlineMachineCount: msg\n        })\n    }\n    modifyTvState = (result, msg) => {\n        // console.log(result, msg)\n        this.setState({\n            tvState: msg\n        })\n    }\n\n\n    renderContent(pageText) {\n        if (pageText === 'machine-list') {\n            return <MachineList server_path={server_path} parent={ this } />\n        } else if (pageText === 'time-list') {\n            return <TimeList server_path={server_path} {...this.props} />\n            // } else if (pageText === 'net-chart-item') {\n            //     return <NetChartItem server_path={server_path} machineName='X3-55'/>\n        } else if (pageText === 'net-chart-list') {\n            return <NetList server_path={server_path}/>\n        } else if (pageText === 'jsdemoc') {\n            return <Jsdemoc/>\n        }\n\n    }\n\n\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"设备开关\"\n                        key=\"Life\"\n                        icon={  <span className=\"iconfont icon-shebeiguanli\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-shebeiguanli\" style={{fontColor:'blue'}}> </span>  }\n                        selected={this.state.selectedTab === 'machine-list'}\n                        badge={this.state.onlineMachineCount}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'machine-list',\n                            });\n                            history.push('/home/machine-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('machine-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={  <span className=\"iconfont icon-dingshi\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-dingshi\" style={{fontColor:'blue'}}> </span>  }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={this.state.tvState}\n                        selected={this.state.selectedTab === 'time-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'time-list',\n                            });\n                            history.push('/home/time-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('time-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={  <span className=\"iconfont icon-tubiao-zhexiantu\"> </span>  }\n                        selectedIcon={  <span className=\"iconfont icon-tubiao-zhexiantu\" style={{fontColor:'blue'}}> </span>  }\n                        title=\"流量报表\"\n                        key=\"Koubei\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'net-chart-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'net-chart-list',\n                            });\n                            history.push('/home/net-chart-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('net-chart-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"Test\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'jsdemoc'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'jsdemoc',\n                            });\n                            history.push('jsdemoc');\n\n                        }}\n                    >\n                        {this.renderContent('/home/jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default HomePage\n\n","import React, {Component} from 'react';\nimport {Line} from '@ant-design/charts';\nimport axios from \"axios\";\nimport './OnLineItem.css'\n\nconst server_path = process.env.REACT_APP_SERVER_PATH;\n\nclass OnLineItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"NetChartItem componentDidMount 进来了。。。machineName:\" + this.props.machineName + \" startTime:\" + this.props.startTime);\n        this.getList(this.props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // debugger\n        console.log(\"NetChartItem componentWillReceiveProps 进来了。。。machineName:\" + nextProps.machineName + \" startTime:\" + nextProps.startTime);\n        this.getList(nextProps);\n\n    }\n\n\n    getList(props) {\n        axios.get(server_path + props.subUrl + '?startTime=' + props.startTime + '&endTime=' + props.endTime + '&machineName=' + props.machineName)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                // console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    render() {\n\n        const data = [];\n\n        // for (let i = 0; i < 12 * 24; i++) {\n        //     var item = {time: i, value: 3 * i * 0.1};\n        //     data.push(item)\n        // }\n\n\n        this.state.list.map((obj, i) => {\n            var item = {time: obj.timeStr, value: obj.net};\n            data.push(item);\n            return 0;\n        });\n\n        const config = {\n            data,\n            height: 400,\n            padding: [40, 20, 40, 20],\n            xField: 'time',\n            yField: 'value',\n            point: {\n                size: 5,\n                shape: 'diamond',\n            },\n            label: {\n                style: {\n                    stroke: 'green',  //文字的描边\n                    fill: 'red', //文字的填充色\n\n                },\n            },\n\n        };\n\n        // return <Line {...config} />;\n\n        return (\n            <div className=\"g2\">\n                <div>{this.props.machineName}</div>\n                <Line {...config} />\n            </div>\n        )\n    }\n}\n\nexport default OnLineItem;\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass OnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible1: false,\n            startTime: moment().format('YYYY-MM-DD 00:00'),\n            visible2: false,\n            endTime: moment().format('YYYY-MM-DD 23:59'),\n        }\n\n    }\n\n\n    componentDidMount() {\n        console.log(\"OnLineList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n\n    render() {\n\n        // const startTime = moment().format('YYYYMMDD0000');\n        // const endTime = moment().format('YYYYMMDDHHmm');\n        // const startTime = moment(this.state.startTime, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n        // const endTime = moment(this.state.endTime, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default OnLineList\n\n\n\n\n\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass Least3HoursOnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let startTime = moment().subtract(3, \"hours\").format('YYYY-MM-DD HH:mm');\n        let endTime = moment().format('YYYY-MM-DD HH:mm');\n\n        if (startTime.substring(0, 8) !== endTime.substring(0, 8)) {\n            startTime = moment().format('YYYY-MM-DD 00:00');\n        }\n\n        this.state = {\n            visible1: false,\n            startTime: startTime,\n            visible2: false,\n            endTime: endTime,\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Least3HoursNetChartList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n    render() {\n\n        // debugger\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default Least3HoursOnLineList\n\n\n\n\n\n","import React from 'react';\nimport OnLineItem from \"./OnLineItem\";\nimport {DatePicker, Button, Space,} from 'antd-mobile-v5';\nimport moment from 'moment'\n\n\nclass Least1HoursOnLineList extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let startTime = moment().subtract(1, \"hours\").format('YYYY-MM-DD HH:mm');\n        let endTime = moment().format('YYYY-MM-DD HH:mm');\n\n        if (startTime.substring(0, 8) !== endTime.substring(0, 8)) {\n            startTime = moment().format('YYYY-MM-DD 00:00');\n        }\n\n        this.state = {\n            visible1: false,\n            startTime: startTime,\n            visible2: false,\n            endTime: endTime,\n        }\n\n    }\n\n    componentDidMount() {\n        console.log(\"Least1HoursNetChartList componentDidMount 进来了。。。\")\n    }\n\n    getYYYYMMDDHHmm = (timeStr) => {\n        return moment(timeStr, 'YYYY-MM-DD HH:mm').format('YYYYMMDDHHmm');\n    }\n\n    render() {\n\n        // debugger\n        return (\n            <div>\n                <div>\n                    <Space wrap>\n                        <>\n                            开始时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible1: true}\n                                })\n                            }}\n                        >\n                            {this.state.startTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible1}\n                                defaultValue={new Date(this.state.startTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible1: false}\n                                    })\n                                }}\n\n                                onConfirm={val => {\n                                    // debugger\n                                    this.setState({\n                                        startTime: moment(val).format('YYYY-MM-DD HH:mm')\n                                    })\n                                    // debugger\n                                }}\n                            />\n                        </>\n                        <>\n                            结束时间：<Button\n                            onClick={() => {\n                                this.setState((prevState) => {\n                                    return {visible2: true}\n\n                                })\n                            }}\n                        >\n                            {this.state.endTime}\n                        </Button>\n                            <DatePicker\n                                visible={this.state.visible2}\n                                defaultValue={new Date(this.state.endTime + \":00\")}\n                                precision='minute'\n                                onClose={() => {\n                                    this.setState((prevState) => {\n                                        return {visible2: false}\n                                    })\n                                }}\n\n                                onConfirm={val2 => {\n                                    this.setState({\n                                        endTime: moment(val2).format('YYYY-MM-DD HH:mm')\n                                    })\n                                }}\n                            />\n                        </>\n                    </Space>\n\n                </div>\n\n                <div>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='X3-55'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='CM201-2'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali6s'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='ali11'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='alioo15'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='raspberrypi'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlnew50'/>\n                    <OnLineItem subUrl='/statistic/getOnLineData' startTime={this.getYYYYMMDDHHmm(this.state.startTime)} endTime={this.getYYYYMMDDHHmm(this.state.endTime)} machineName='hlold'/>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n\n\nexport default Least1HoursOnLineList\n\n\n\n\n\n","import React from \"react\";\nimport {TabBar} from 'antd-mobile';\n\nimport './OnLinePage.css'\n\n\nimport OnLineList from '../component/online/OnLineList';\nimport Least3HoursOnLineList from '../component/online/Least3HoursOnLineList';\nimport Least1HoursOnLineList from '../component/online/Least1HoursOnLineList';\n\nimport {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory() // history模式\n\nclass OnLinePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // debugger\n        var selectedTab = \"online-list\";\n        if (this.props.match.params && this.props.match.params.selectedTab) {\n            selectedTab = this.props.match.params.selectedTab;\n\n            console.log(\"1.OnLinePage this.props.location.pathname=\", this.props.location.pathname)\n            console.log(\"2.OnLinePage this.props.match =\", this.props.match)\n            console.log(\"3.OnLinePage selectedTab =\", selectedTab)\n        }\n\n        this.state = {\n            selectedTab: selectedTab,\n            hidden: false,\n            fullScreen: true,\n        };\n\n        if (process.env.NODE_ENV === 'development') {\n            console.log('开发环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        } else if (process.env.NODE_ENV === 'production') {\n            console.log('生产环境 REACT_APP_SERVER_PATH:'+process.env.REACT_APP_SERVER_PATH)\n        }\n\n    }\n\n    renderContent(pageText) {\n        if (pageText === 'online-list') {\n            return <OnLineList/>\n        } else if (pageText === 'least3-online-list') {\n            return <Least3HoursOnLineList/>\n        } else if (pageText === 'least1-online-list') {\n            return <Least1HoursOnLineList/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? {position: 'fixed', height: '100%', width: '100%', top: 0} : {height: 400}}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"联网时间\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat'\n                        }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'online-list'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'online-list',\n                            });\n                            history.push('online-list');\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近3小时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'least3-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least3-online-list',\n                            });\n                            history.push('least3-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least3-online-list')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat'\n                            }}\n                            />\n                        }\n                        title=\"最近1小时\"\n                        key=\"Koubei2\"\n                        badge={''}\n                        selected={this.state.selectedTab === 'least1-online-list'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'least1-online-list',\n                            });\n                            history.push('least1-online-list');\n\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('least1-online-list')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default OnLinePage\n\n","import React, { useState } from 'react'\n\nimport { Button, DatePicker, Space, Toast } from 'antd-mobile-v5'\n// import moment from 'moment'\n\n// const now = new Date()\n\n\n\nfunction Precision() {\n    const [visible1, setVisible1] = useState(false)\n    const [visible2, setVisible2] = useState(false)\n    return (\n        <Space wrap>\n\n            <>\n                <Button\n                    onClick={() => {\n                        setVisible1(true)\n                    }}\n                >\n                    年-月\n                </Button>\n                <DatePicker\n                    visible={visible1}\n                    onClose={() => {\n                        setVisible1(false)\n                    }}\n                    precision='month'\n                    onConfirm={val => {\n                        Toast.show(val.toString())\n                    }}\n                />\n            </>\n            <>\n                <Button\n                    onClick={() => {\n                        setVisible2(true)\n                    }}\n                >\n                    年-月-日-时-分\n                </Button>\n                <DatePicker\n                    visible={visible2}\n                    onClose={() => {\n                        setVisible2(false)\n                    }}\n                    precision='minute'\n                    onConfirm={val => {\n                        Toast.show(val.toString())\n                    }}\n                />\n            </>\n        </Space>\n    )\n}\n\nexport default () => {\n    return (\n        <>\n            {/*<DemoBlock title='基础用法'>*/}\n                {/*<BasicDemo />*/}\n            {/*</DemoBlock>*/}\n            {/*<DemoBlock title='渲染所选值'>*/}\n                {/*<RenderChildrenDemo />*/}\n            {/*</DemoBlock>*/}\n            {/*<DemoBlock title='控制选择精度'>*/}\n                {/*<Precision />*/}\n            {/*</DemoBlock>*/}\n            <Precision />\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd-mobile/dist/antd-mobile.css';\n// import 'antd/dist/antd.css';\nimport './index.css';\n// import { GlobalStyleIcon } from './iconfont/iconfont.css'\nimport  './iconfont/iconfont.css'\n\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport HomePage from \"./page/HomePage\";\nimport OnLinePage from \"./page/OnLinePage\";\nimport OnLinePageTest from \"./component/online/OnLinePageTest\";\nimport Jsdemoc from \"./component/demo/jsdemoc\";\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <Route path='/' exact component={HomePage}></Route>\n        <Route path='/home/:selectedTab' exact component={HomePage}></Route>\n        <Route path='/online/:selectedTab' exact component={OnLinePage}></Route>\n        <Route path='/online/test' exact component={OnLinePageTest}></Route>\n        <Route path='/detai/:id' exact component={Jsdemoc}></Route>\n    </BrowserRouter>,\n\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}