{"version":3,"sources":["serviceWorker.js","jsdemo.js","jsdemob.js","jsdemoc.js","TabBarExample.js","study/Example.js","index.js"],"names":["Boolean","window","location","hostname","match","Item","List","JsDemo","props","state","list","mychecked","axios","get","server_path","then","res","setState","data","terminals","console","log","JSON","stringify","catch","err","obj","event","mac","act","flag","substring","this","getDataA","size","map","i","key","full","Header","title","name","ip","thumb","extra","checked","onChange","accessCtrl","bind","Body","Footer","content","speed","upSpeed","React","Component","nowTimeStamp","Date","now","utcOffset","getTime","getTimezoneOffset","JsDemob","formatDate","date","pad","n","timeStr","getHours","getMinutes","onChange1","type","time","timeString","startTime","startTimeStr","endTime","endTimeStr","updateDataA","postData","url","method","dpValue","idt","toISOString","slice","onSubmit","form","validateFields","force","error","validateIdp","rule","callback","isNaN","parse","Error","cDate","newDate","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTimeout","setFieldsValue","dp","validateDatePicker","className","mode","minuteStep","value","arrow","ButtonExample","disabled","loading","icon","src","alt","inline","style","marginRight","ReactDOM","render","document","getElementById","TabBarExample","selectedTab","hidden","fullScreen","pageText","position","height","width","top","unselectedTintColor","tintColor","barTintColor","tabBarPosition","background","selectedIcon","selected","badge","onPress","data-seed","renderContent","dot","Title","FattmatDater","toLocaleTimeString","Toggle","handleClick","prevState","isToggleOn","onClick","WarningBanner","warn","ListItem","ListUl","listdata","number","toString","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.900f67b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Card, List, Switch, WhiteSpace} from 'antd-mobile';\n\nimport axios from 'axios'\n\n\nconst Item = List.Item;\n\n\nconst server_path = 'http://192.168.16.198:8081';\n\nclass JsDemo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    getDataA() {\n        axios.get(server_path + '/statistic/getList')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.terminals\n                });\n                console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    accessCtrl(obj, event) {\n\n        var mac = obj.mac;\n        var mychecked = ('F' === obj.flag.substring(2, 3)) ? true : false;\n        var act = mychecked ? \"on\" : \"off\";\n\n\n        //debugger\n        axios.get(server_path + '/statistic/accessCtrl?mac=' + mac + '&act=' + act)\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data.terminals\n                });\n                console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n\n    }\n\n\n    componentDidMount() {\n        console.log(\"jsdemo componentDidMount 进来了。。。\")\n        this.getDataA();\n    }\n\n\n    render() {\n        return (\n            <div>\n                <WhiteSpace size=\"lg\"/>\n                <List\n                >\n\n\n                    {\n                        this.state.list.map((obj,i) => {\n                            //console.log(\"obj=\"+JSON.stringify(obj))\n\n                            //TTFFFFTFFTFF ali15可上网   ；TTTFFFTFFTFF 不可上网\n                            //FTFFFFTFFTFF ali11可上网   ；FFTFFFTFFTFF 不可上网\n                            //FTFFFFFFFTFF x55  可上网   ；FTTFFFFFFTFF 不可上网\n                            //FFFFFFTFFTFF 离线设备可上网 ；FFTFFFTFFTFF 不可上网\n                            //var mychecked = ('FTFFFFTFFTFF' == obj.flag || 'FTFFFFFFFTFF' == obj.flag || 'FFFFFFTFFTFF' == obj.flag || 'TTFFFFTFFTFF' == obj.flag) ? true : false;\n\n                            //第3位是F 可以上网，第3位是T不可上网\n                            var mychecked = ('F' === obj.flag.substring(2, 3)) ? true : false;\n\n                            //console.log(obj.name+\",\"+ obj.flag+\",mychecked=\"+mychecked);\n\n                            //debugger\n                            return (\n                                <Item key={i}>\n\n                                    <Card full>\n                                        <Card.Header\n                                            title={obj.name + \" ( \" + obj.ip + \")\"}\n                                            thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n                                            extra={<Switch\n                                                checked={mychecked}\n                                                // onChange={() => {\n                                                // this.setState({\n                                                // checked: !this.state.mychecked\n                                                //});\n                                                //alert(\"666\");\n                                                // }}\n                                                onChange={this.accessCtrl.bind(this, obj)}\n                                            />\n\n                                            }\n                                        />\n                                        <Card.Body>\n                                            <div>{obj.mac} </div>\n                                        </Card.Body>\n                                        <Card.Footer content={\"实时下载速度：\" + obj.speed} extra={<div> {\"实时上传速度：\" + obj.upSpeed} </div>}/>\n                                    </Card>\n\n                                </Item>)\n                        })\n                    }\n\n\n                </List>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default JsDemo\n\n","import React from \"react\";\n\nimport {Card, DatePicker, List} from 'antd-mobile';\nimport axios from \"axios\";\n\n// import {moment} from \"moment\";\n// import \"moment/locale/zh-cn\"\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\nconst utcOffset = new Date(now.getTime() - (now.getTimezoneOffset() * 60000));\n\n\nconst server_path = 'http://192.168.16.198:8081';\n\nclass JsDemob extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            mychecked: true\n        }\n    }\n\n    getDataA() {\n        axios.get(server_path + '/statistic/getUnavailableTimeList')\n            .then((res) => {\n\n                // 注意this指向\n                this.setState({\n                    list: res.data\n                });\n                console.log(\"res.data=\" + JSON.stringify(res.data));\n                //debugger\n\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n\n    formatDate = (date) => {\n        /* eslint no-confusing-arrow: 0 */\n        const pad = n => n < 10 ? `0${n}` : n;\n        // const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`;\n        const timeStr = `${pad(date.getHours())}:${pad(date.getMinutes())}`;\n        return `${timeStr}`;\n    }\n\n    onChange1 = (obj, i, type, time) => {\n        // debugger\n        const timeString = this.formatDate(time);\n        console.log(\"xxxx===\", i, time, timeString);\n\n        if (type === 'startTimeStr') {\n            obj.startTime = time.getTime();\n            obj.startTimeStr = timeString;\n        } else {\n            obj.endTime = time.getTime();\n            obj.endTimeStr = timeString;\n        }\n\n        console.log(\"xxxx===\", this.state.list);\n        this.setState({list: this.state.list});\n\n        this.updateDataA();\n\n    }\n\n\n    updateDataA = () => {\n\n        // let postData = {list:this.state.list};\n        let postData = this.state.list;\n\n\n        axios({\n            url: server_path + '/statistic/updateUnavailableTimeList',\n            method: 'post',\n            data: postData,\n            // headers:{\n            //     'Content-Type':'application/x-www-form-urlencoded'\n            // }\n        }).then((res) => {\n\n            // 注意this指向\n            this.setState({\n                list: res.data\n            });\n            console.log(\"res.data=\" + JSON.stringify(res.data));\n            //debugger\n\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n\n    componentDidMount() {\n        console.log(\"jsdemob componentDidMount 进来了。。。\")\n        this.getDataA();\n    }\n\n\n    state = {\n        dpValue: now,\n        idt: utcOffset.toISOString().slice(0, 10),\n    }\n\n\n    onSubmit = () => {\n        debugger\n\n        this.props.form.validateFields({force: true}, (error) => {\n            // debugger\n            if (error) {\n                console.log(\"出现异常\" + error);\n            }\n        });\n\n\n    }\n    validateIdp = (rule, date, callback) => {\n        if (isNaN(Date.parse(date))) {\n            callback(new Error('Invalid Date'));\n        } else {\n            const cDate = new Date(date);\n            const newDate = new Date(+this.state.dpValue);\n            newDate.setFullYear(cDate.getFullYear());\n            newDate.setMonth(cDate.getMonth());\n            newDate.setDate(cDate.getDate());\n            // this.setState({ dpValue: newDate });\n            setTimeout(() => this.props.form.setFieldsValue({dp: newDate}), 10);\n            callback();\n        }\n    }\n    validateDatePicker = (rule, date, callback) => {\n        console.log(\"alioo date=\" + date)\n        // debugger\n        if (date && date.getMinutes() !== 15) {\n            callback();\n        } else {\n            callback(new Error('15 is invalid'));\n        }\n    }\n\n    render() {\n        // const {getFieldProps, getFieldError} = this.props.form;\n        return (<form>\n            <List\n                className=\"date-picker-list\"\n            >\n                {\n                    this.state.list.map((obj, i) => {\n                        console.log(\"i=\" + i + \",obj=\" + JSON.stringify(obj))\n\n                        //debugger\n                        return (\n\n                            <List.Item key={i}>\n                                <Card full>\n                                    <Card.Header\n                                        title='禁用时间区间'\n                                        thumb=\"https://gw.alipayobjects.com/zos/rmsportal/MRhHctKOineMbKAZslML.jpg\"\n\n                                    />\n                                    <Card.Body>\n                                        <div>\n                                            <DatePicker\n                                                mode=\"time\"\n                                                minuteStep={2}\n                                                // use12Hours\n                                                value={new Date(obj.startTime)}\n                                                onChange={time => this.onChange1(obj, i, 'startTimeStr', time)}\n                                            >\n                                                <List.Item arrow=\"horizontal\">开始禁用时间</List.Item>\n                                            </DatePicker>\n\n                                            <DatePicker\n                                                mode=\"time\"\n                                                minuteStep={2}\n                                                // use12Hours\n                                                value={new Date(obj.endTime)}\n                                                onChange={time => this.onChange1(obj, i, 'endTimeStr', time)}\n                                            >\n                                                <List.Item arrow=\"horizontal\">结束禁用时间</List.Item>\n                                            </DatePicker>\n\n\n                                        </div>\n\n\n                                    </Card.Body>\n                                    {/*<Card.Footer content={ \"实时下载速度：222\" } extra={<div> { \"实时上传速度：222\"  } </div>}/>*/}\n                                </Card>\n                            </List.Item>\n\n\n                        )\n                    })\n                }\n\n            </List>\n        </form>);\n    }\n}\n\n\nexport default JsDemob\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route} from 'react-router-dom';\nimport {Button, WhiteSpace, WingBlank} from 'antd-mobile';\n\nconst ButtonExample = () => (\n    <WingBlank>\n        <Button>default</Button><WhiteSpace />\n        <Button disabled>default disabled</Button><WhiteSpace />\n\n        <Button type=\"primary\">primary</Button><WhiteSpace />\n        <Button type=\"primary\" disabled>primary disabled</Button><WhiteSpace />\n\n        <Button type=\"warning\">warning</Button><WhiteSpace />\n        <Button type=\"warning\" disabled>warning disabled</Button><WhiteSpace />\n\n        <Button loading>loading button</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\">with icon</Button><WhiteSpace />\n        <Button icon={<img src=\"https://gw.alipayobjects.com/zos/rmsportal/jBfVSpDwPbitsABtDDlB.svg\" alt=\"\" />}>with custom icon</Button><WhiteSpace />\n        <Button icon=\"check-circle-o\" inline size=\"small\" style={{ marginRight: '4px' }}>with icon and inline</Button>\n        <Button icon=\"check-circle-o\" inline size=\"small\">with icon and inline</Button>\n        <WhiteSpace />\n\n        {/* <Button activeStyle={false}>无点击反馈</Button><WhiteSpace /> */}\n        {/* <Button activeStyle={{ backgroundColor: 'red' }}>custom feedback style</Button><WhiteSpace /> */}\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline style={{ marginRight: '4px' }}>inline primary</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline style={{ marginRight: '4px' }} className=\"am-button-borderfix\">inline ghost</Button>\n\n        <WhiteSpace />\n        <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }}>primary</Button>\n        <Button type=\"primary\" inline size=\"small\" disabled>primary disabled</Button>\n        <WhiteSpace />\n        <Button type=\"ghost\" inline size=\"small\" style={{ marginRight: '4px' }}>ghost</Button>\n        {/* use `am-button-borderfix`. because Multiple buttons inline arranged, the last one border-right may not display */}\n        <Button type=\"ghost\" inline size=\"small\" className=\"am-button-borderfix\" disabled>ghost disabled</Button>\n    </WingBlank>\n);\nReactDOM.render(<ButtonExample />,  document.getElementById('root'));\nexport default ButtonExample\n\n\n","import React from \"react\";\nimport { TabBar } from 'antd-mobile';\nimport './TabBarExample.css'\n\n\nimport Jsdemo from './jsdemo';\nimport Jsdemob from './jsdemob';\nimport Jsdemoc from './jsdemoc';\n\n\nclass TabBarExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'blueTab',\n            hidden: false,\n            fullScreen: true,\n        };\n    }\n\n\n    renderContent(pageText) {\n        if(pageText==='jsdemo'){\n            return  <Jsdemo/>\n        }else if(pageText==='jsdemob'){\n            return  <Jsdemob/>\n        }else if(pageText==='jsdemoc'){\n            return  <Jsdemoc/>\n        }\n\n    }\n\n    render() {\n        return (\n            <div style={this.state.fullScreen ? { position: 'fixed', height: '100%', width: '100%', top: 0 } : { height: 400 }}>\n                <TabBar\n                    unselectedTintColor=\"#949494\"\n                    tintColor=\"#33A3F4\"\n                    barTintColor=\"white\"\n                    hidden={this.state.hidden}\n                    tabBarPosition=\"top\"\n                >\n                    <TabBar.Item\n                        title=\"路由开关\"\n                        key=\"Life\"\n                        icon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/sifuoDUQdAFKAVcFGROC.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selectedIcon={<div style={{\n                            width: '22px',\n                            height: '22px',\n                            background: 'url(https://zos.alipayobjects.com/rmsportal/iSrlOTqrKddqbOmlvUfq.svg) center center /  21px 21px no-repeat' }}\n                        />\n                        }\n                        selected={this.state.selectedTab === 'blueTab'}\n                        badge={1}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'blueTab',\n                            });\n                        }}\n                        data-seed=\"logId\"\n                    >\n                        {this.renderContent('jsdemo')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"TV定时\"\n                        key=\"Koubei\"\n                        badge={'new'}\n                        selected={this.state.selectedTab === 'redTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'redTab',\n                            });\n                        }}\n                        data-seed=\"logId1\"\n                    >\n                        {this.renderContent('jsdemob')}\n                    </TabBar.Item>\n                    <TabBar.Item\n                        icon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        selectedIcon={\n                            <div style={{\n                                width: '22px',\n                                height: '22px',\n                                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\n                            />\n                        }\n                        title=\"待启用\"\n                        key=\"Friend\"\n                        dot\n                        selected={this.state.selectedTab === 'greenTab'}\n                        onPress={() => {\n                            this.setState({\n                                selectedTab: 'greenTab',\n                            });\n                        }}\n                    >\n                        {this.renderContent('jsdemoc')}\n                    </TabBar.Item>\n\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default TabBarExample\n\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: \"Hello lzc\",\n            // title: 333,\n            date: new Date(),\n            showWarning: true,\n            mylistdata: [11, 22, 33, 44, 55]\n        };\n    }\n\n    // componentDidMount() {\n    //     this.timerID = setInterval(\n    //         () => this.setState({date: new Date()}),\n    //         1000\n    //     );\n    // }\n\n    componentDidMount() {\n        let that = this;\n        setInterval(function () {\n            that.setState({\n                date: new Date()\n            })\n        }, 1000);\n    }\n\n    handleToggleClick = () => {\n        this.setState(prevState => ({\n            showWarning: !prevState.showWarning\n        }));\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Title title={this.state.title}/>\n                <FattmatDater date={this.state.date}/>\n                <Toggle/>\n                <div>\n                    <WarningBanner warn={this.state.showWarning}/>\n                    <button onClick={this.handleToggleClick}>\n                        {this.state.showWarning ? '隐藏' : '显示'}\n                    </button>\n                </div>\n                <ListUl listdata={this.state.mylistdata}/>\n            </div>\n        );\n    }\n\n\n}\n\nclass Title extends React.Component {\n    render() {\n        return (\n            <h1>{this.props.title}</h1>\n        );\n    }\n}\n\nTitle.propTypes = {\n    title: PropTypes.string\n};\n\nfunction FattmatDater(props) {\n    return <h2>现在是 {props.date.toLocaleTimeString()}.</h2>\n\n}\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isToggleOn: true};\n\n        // 这边绑定是必要的，这样 `this` 才能在回调函数中使用\n        //this.handleClick = this.handleClick.bind(this);\n    }\n\n    // handleClick() {\n    //     this.setState(prevState => ({\n    //         isToggleOn: !prevState.isToggleOn\n    //     }));\n    // }\n\n    handleClick = () => {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn\n        }));\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleClick}>\n                {this.state.isToggleOn ? 'ON' : 'OFF'}\n            </button>\n        );\n    }\n}\n\nfunction WarningBanner(props) {\n    if (!props.warn) {\n        return null;\n    }\n\n    return (\n        <div className=\"warning\">\n            警告!\n        </div>\n    );\n}\n\n\nfunction ListItem(props) {\n    return (<li>{props.value}</li>);\n}\n\nfunction ListUl(props) {\n    // debugger\n    // const numbers = props.listdata;\n    // const listItems = numbers.map((number) =>\n    //     // 又对啦！key应该在数组的上下文中被指定\n    //     <ListItem key={number.toString()}  value={number} />\n    //\n    // );\n    //\n    // return (<ul>{listItems}</ul>);\n\n    // const listItems=props.listdata.map((number)=>{\n    //     return <ListItem key={number.toString()}  value={number} />\n    // })\n\n    return (<ul>{\n        props.listdata.map((number) => {\n            return <ListItem key={number.toString()} value={number}/>\n        })}\n    </ul>)\n}\n\n//这里只能使用export default Clock，而不能是export default Example啥的\nexport default Clock\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\n\n\nimport TabBarExample from \"./TabBarExample\";\nimport Example from \"./study/Example.js\";\n\nReactDOM.render(\n    <div>\n        <TabBarExample/>\n        {/*<Example/>*/}\n    </div>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}